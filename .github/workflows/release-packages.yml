name: Release RPM DEB

on:
  push:
    # paths:
    # - build/install/deb**
    # - build/install/rpm**
  workflow_dispatch:
  
env:
  BRANCH_NAME: $(echo ${GITHUB_REF#refs/heads/})
  PRODUCT: $(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]' )
  BUILD_NUMBER: "${{ github.run_number }}"


jobs:
  build_deb:
    name: Build .deb package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Import GPG 
        uses: crazy-max/ghaction-import-gpg@v5
        with: 
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          
      - name: Get files from repository
        uses: actions/checkout@v2
              
      - name: INSTALL tools & Prepare build /home/runner/work/DocSpace/DocSpace
        id: get_vars
        run: |
          wget -O - https://dl.yarnpkg.com/debian/pubkey.gpg | sudo gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/yarnkey.gpg --import
          sudo chmod 644 /usr/share/keyrings/yarnkey.gpg
          echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          wget https://packages.microsoft.com/config/$(lsb_release -is | tr [:upper:] [:lower:])/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          wget -O - https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs dh-make
          sudo apt-get install dpkg-sig
          sudo npm install -g json
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo "${{ github.ref }}" | grep  -oP '\d+\.\d+\.\d+' || echo "1.0.0")" >> $GITHUB_OUTPUT
          
      - name: BUILD package DEB
        shell: bash
        run: |
          cd build/install/deb/ 
          find ../ -type f -exec sed -i "s/{{product}}/${{ env.PRODUCT }}/g" {} ';'
          sed -i "s/{{package_header_tag_version}}/${{ steps.get_vars.outputs.VERSION }}.$BUILD_NUMBER/g" debian/changelog debian/control
          dpkg-buildpackage -us -uc
      
      - name: Sign packages and check 
        run: |
          keyID="$(gpg --list-keys --keyid-format short | awk '/^pub/ {print $2}' | cut -d'/' -f2)"
          echo $keyID
          echo "${{ secrets.PASSPHRASE }}" | gpg --batch --edit-key "$keyID" <<EOF
          trust
          5
          y
          quit
          EOF
          export GPG_TTY=$(tty)         
          
          dpkg-sig -k "$keyID" --sign builder /home/runner/work/DocSpace/DocSpace/build/install/*.deb
          dpkg-sig --verify /home/runner/work/DocSpace/DocSpace/build/install/*.deb

        
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: "${{ steps.get_vars.outputs.BRANCH_NAME }}"
          tag: "${{ steps.get_vars.outputs.VERSION }}-${{ env.BUILD_NUMBER }}"
          name: DocSpace packeges release ${{ env.BUILD_NUMBER }}
          body: Here you may find packages for DocSpace
          artifacts: /home/runner/work/DocSpace/DocSpace/build/install/*.deb
          
          
  build_rpm:
    name: Build .rpm package
    runs-on: ubuntu-latest
    permissions:
      contents: write
 
    steps:
      - name: Import GPG 
        uses: crazy-max/ghaction-import-gpg@v5
        with: 
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Get files from repository.
        uses: actions/checkout@v2

      - name: INSTALL tools & Prepare build
        id: get_vars
        run: |
          wget -O - https://dl.yarnpkg.com/debian/pubkey.gpg | sudo gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/yarnkey.gpg --import
          sudo chmod 644 /usr/share/keyrings/yarnkey.gpg
          echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          wget https://packages.microsoft.com/config/$(lsb_release -is | tr [:upper:] [:lower:])/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          wget -O - https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs dh-make rename
          sudo npm install -g json
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo "${ GITHUB_REF##*/ }" | grep  -oP '\d+\.\d+\.\d+' || echo "1.0.0")" >> $GITHUB_OUTPUT
          
      - name: BUILD package RPM
        run: |
          cd build/install/rpm/SPECS
          mv ./SOURCES/product.rpmlintrc ./SOURCES/${{ env.PRODUCT }}.rpmlintrc
          wget https://github.com/elshirak/${{ env.PRODUCT }}/archive/${{ env.BRANCH_NAME }}.tar.gz -O ./SOURCES/DocSpace-$(echo ${{ env.BRANCH_NAME }} | tr '/' '-').tar.gz 
          wget https://github.com/ONLYOFFICE/document-templates/archive/main/community-server.tar.gz -O ./SOURCES/document-templates-main-community-server.tar.gz
          wget https://github.com/ONLYOFFICE/dictionaries/archive/master.tar.gz -O ./SOURCES/dictionaries-master.tar.gz
          sed -i -e '/BuildRequires/d' product.spec
          rpmbuild -D "GIT_BRANCH $(echo ${{ env.BRANCH_NAME }} | tr '/' '-')" -D "_topdir $(pwd)" -D "version ${{ steps.get_vars.outputs.VERSION }}" -D "release ${{ env.BUILD_NUMBER }}" -ba product.spec


      - name: Sign packages and check 
        run: |
          cp /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/*.rpm ~ 
          ls -la ~
          echo "//////////////////////////////////////"
          
          ls -la /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/
          pwd
          
          sudo chmod -R 777 /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS
          sudo chown -R $USER /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/
          sudo chgrp -R $USER /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/
          
          ls -la /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/
          echo "........................................"
          
          ls -la /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/
          echo "........................................"
          
          ls -la /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS
          echo "........................................"
          
          ls -la /home/runner/work/DocSpace/DocSpace/build/install/rpm
          echo "........................................"
          
          cat << EOF >> $HOME/.rpmmacros
          %_signature gpg
          %_gpg_path $HOME/.gnupg
          %_gpg_name Ascensio System SIA <support@onlyoffice.com>
          %__gpg /usr/bin/gpg
          EOF
          
          gpg --export --armor --output onlyoficce-gpgkey.pub
          rpm --import onlyoficce-gpgkey.pub
          
          rpm --addsign /home/runner/*.rpm
          rpm --checksig /home/runner/*.rpm

          
      
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: "${{ steps.get_vars.outputs.BRANCH_NAME }}"
          tag: "${{ steps.get_vars.outputs.VERSION }}-${{ env.BUILD_NUMBER }}"
          name: DocSpace packeges release ${{ env.BUILD_NUMBER }}
          body: Here you may find packages for DocSpace
          artifacts: /home/runner/*.rpm
