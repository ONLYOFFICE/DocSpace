name: Release RPM DEB
on:
  workflow_dispatch:
  push:

env:
  product: $(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]')
  version: $(echo "${GITHUB_REF##*/}" | tr -d '[:alpha:]' ) 
  TAG: "${{ github.ref_name }}"
  BUILD_NUMBER: "${{ github.run_number }}"


jobs:

  create_relese:
    name: Create release 
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps: 
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          name: Release v-${{ github.run_number }}
          tag_name: "${{ github.event.release.tag_name }}"
          body: |
            Release packages for ONLYOFFICE DocSpace:           
            - .deb
            - .rpm
          draft: false
        


  build_deb:
    name: Build .deb package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Get files from repository
        uses: actions/checkout@v2
              
      - name: INSTALL tools & Prepare build /home/runner/work/DocSpace/DocSpace
        run: |
          sudo apt install -y dh-make nginx mysql-server rename curl
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get remove libnode72
          sudo apt-get clean
          declare repo_version=$(if command -v lsb_release &> /dev/null; then lsb_release -r -s; else grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"'; fi)
          wget https://packages.microsoft.com/config/ubuntu/$repo_version/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs
          sudo npm install -g json

      - name: BUILD package DEB
        shell: bash
        run: |
          echo "${{ env.product }}"
          echo "${{ env.version }}"
          echo "${{ env.TAG }}"
          echo "${{ env.BUILD_NUMBER }}"
          
          sudo sed -i "s_Duplicates)' == 'false'_Duplicates)' == 'true'_" /usr/share/dotnet/sdk/$(dotnet --version)/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets 
          cd build/install/deb/ 
          rename -f -v "s/product/${{ env.product }}/" debian/* ../common/* ../common/logrotate/*
          find ../ -type f -exec sed -i "s/{{product}}/${{ env.product }}/g" {} ';'
          sed -i "s/{{package_header_tag_version}}/${{ env.version }}.$BUILD_NUMBER/g" debian/changelog debian/control
          dpkg-buildpackage -us -uc
        

      - name: Upload assets DEB
        uses: softprops/action-gh-release@v1
        with:
          files: /home/runner/work/DocSpace/DocSpace/build/install/*.deb
          

  build_rpm:
    name: Build .rpm package
    runs-on: ubuntu-latest
    permissions:
      contents: write
 
    steps:
      - name: Get files from repository.
        uses: actions/checkout@v2

      - name: Get variables
        id: get_vars
        run: |
          # echo "product=$(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]' )" >> $GITHUB_ENV
          # echo "version=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "branch_name=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          


      - name: INSTALL tools & Prepare build
        run: |
          sudo apt install -y rpm nginx mysql-server rename curl
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

              ### Removing libnode72 because of dependency error with nodejs package ##
          sudo apt-get remove libnode72
          sudo apt-get clean

          declare repo_version=$(if command -v lsb_release &> /dev/null; then lsb_release -r -s; else grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"'; fi)
          wget https://packages.microsoft.com/config/ubuntu/$repo_version/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs
          sudo npm install -g json
          
        
    
      - name: BUILD package RPM
        run: |

          cd build/install/rpm/SPECS
          
              ### Preparing source directory ###
          mv ./SOURCES/product.rpmlintrc ./SOURCES/${{ env.product }}.rpmlintrc
          wget https://github.com/elshirak/"${{ env.product }}"/archive/${{ steps.get_vars.outputs.branch_name }}.tar.gz -O DocSpace-"${{ steps.get_vars.outputs.branch_name }}".tar.gz 
          wget https://github.com/ONLYOFFICE/document-templates/archive/main/community-server.tar.gz -O document-templates-main-community-server.tar.gz
          wget https://github.com/ONLYOFFICE/dictionaries/archive/master.tar.gz -O dictionaries-master.tar.gz
          cp *.tar.gz ./SOURCES
          
          echo "${{ steps.get_vars.outputs.branch_name }}"
          
          sed -i -e '/BuildRequires/d' product.spec
          rename 's/product/"${{ env.product }}"/g' ../../common/*.sh
          rpmbuild -D "GIT_BRANCH ${{ steps.get_vars.outputs.branch_name }}" -D "_topdir $(pwd)" -D "version ${{ env.version }}" -D "release ${{ env.BUILD_NUMBER }}" -ba product.spec
        
        
      - name: Upload assets RPM 
        uses: softprops/action-gh-release@v1
        with:
          files: /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/*.rpm
