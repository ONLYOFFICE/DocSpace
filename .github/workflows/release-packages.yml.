name: Release RPM DEB
on:
  workflow_dispatch:
  workflow_call: 
  push:

env:
  TAG: "${{ github.ref_name }}"
  BUILD_NUMBER: "${{ github.run_number }}"


jobs:

  build_deb:
    name: Build .deb package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Get files from repository
        uses: actions/checkout@v2
              
      - name: Get variables
        id: get_vars
        run: |
          echo "PRODUCT=$(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]' )" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo "${{ github.ref }}" | grep  -oP '\d+\.\d+\.\d+' )" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
              
      - name: INSTALL tools & Prepare build /home/runner/work/DocSpace/DocSpace
        run: |
          
          sudo apt install -y dh-make nginx mysql-server rename curl
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get remove libnode72
          sudo apt-get clean
          declare repo_version=$(if command -v lsb_release &> /dev/null; then lsb_release -r -s; else grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"'; fi)
          wget https://packages.microsoft.com/config/ubuntu/$repo_version/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs
          sudo npm install -g json

      - name: BUILD package DEB
        shell: bash
        run: |
          
          V="${{ steps.get_vars.outputs.VERSION }}"
          sudo sed -i "s_Duplicates)' == 'false'_Duplicates)' == 'true'_" /usr/share/dotnet/sdk/$(dotnet --version)/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets 
          cd build/install/deb/ 
          rename -f -v "s/product/${{ steps.get_vars.outputs.PRODUCT }}/g" debian/* ../common/* ../common/logrotate/*
          find ../ -type f -exec sed -i "s/{{product}}/${{ steps.get_vars.outputs.PRODUCT }}/g" {} ';'
          sed -i "s/{{package_header_tag_version}}/$V.$BUILD_NUMBER/g" debian/changelog debian/control
          dpkg-buildpackage -us -uc
        

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: "${{ steps.get_vars.outputs.BRANCH_NAME }}"
          tag: "${{ steps.get_vars.outputs.VERSION }}-${{ env.BUILD_NUMBER }}"
          name: DocSpace packeges release "${{ env.BUILD_NUMBER }}"
          body: Here you may find packages for DocSpace
          artifacts: /home/runner/work/DocSpace/DocSpace/build/install/*.deb
          

  build_rpm:
    name: Build .rpm package
    runs-on: ubuntu-latest
    permissions:
      contents: write
 
    steps:
      - name: Get files from repository.
        uses: actions/checkout@v2

      - name: INSTALL tools & Prepare build
        run: |
          sudo apt install -y rpm nginx mysql-server rename curl
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

              ### Removing libnode72 because of dependency error with nodejs package ##
          sudo apt-get remove libnode72
          sudo apt-get clean

          declare repo_version=$(if command -v lsb_release &> /dev/null; then lsb_release -r -s; else grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"'; fi)
          wget https://packages.microsoft.com/config/ubuntu/$repo_version/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y dotnet-sdk-7.0 yarn nodejs
          sudo npm install -g json
          
      - name: Get variables
        id: get_vars
        run: |
          echo "PRODUCT=$(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]' )" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo "${GITHUB_REF##*/}" | tr -d '[:alpha:]' )" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "SOURCE_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT
    
      - name: BUILD package RPM
        run: |

          cd build/install/rpm/SPECS
          
          
              ### Preparing source directory ###
          mv ./SOURCES/product.rpmlintrc ./SOURCES/${{ steps.get_vars.outputs.PRODUCT }}.rpmlintrc
          ls -la ./SOURCES
          wget https://github.com/elshirak/${{ steps.get_vars.outputs.PRODUCT }}/archive/${{ steps.get_vars.outputs.BRANCH_NAME }}.tar.gz -O DocSpace-${{ steps.get_vars.outputs.SOURCE_NAME }}.tar.gz 
          wget https://github.com/ONLYOFFICE/document-templates/archive/main/community-server.tar.gz -O document-templates-main-community-server.tar.gz
          wget https://github.com/ONLYOFFICE/dictionaries/archive/master.tar.gz -O dictionaries-master.tar.gz
          cp *.tar.gz ./SOURCES
          
          ls -la 
          ls -la ./SOURCES
          
          sed -i -e '/BuildRequires/d' product.spec
          rename "s/product/${{ steps.get_vars.outputs.PRODUCT }}/g" ../../common/*.sh
          
          pwd && ls -la ./SOURCES
          
          rpmbuild -D "GIT_BRANCH ${{ steps.get_vars.outputs.SOURCE_NAME }}" -D "_topdir $(pwd)" -D "version ${{ steps.get_vars.outputs.VERSION }}" -D "release ${{ env.BUILD_NUMBER }}" -ba product.spec
        
        
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: "${{ steps.get_vars.outputs.BRANCH_NAME }}"
          tag: "${{ steps.get_vars.outputs.VERSION }}-${{ env.BUILD_NUMBER }}"
          name: DocSpace packeges release "${{ env.BUILD_NUMBER }}"
          body: Here you may find packages for DocSpace
            - .RPM
            - .DEB
          artifacts: /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/*.rpm
