name: 4testing multiarch-build

on:
  push:
    branches: 
      - 'hotfix/v**'
      - 'release/v**'
      - 'feature/v*-git-action'
env:
    DOCKER_PATH: "/build/install/docker"
    REPO: "onlyoffice"
    DOCKER_IMAGE_PREFIX: "4testing-docspace"
    DOCKERFILE: "Dockerfile.app"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build 4testing
        run: |
          cd .${DOCKER_PATH}
          DOCKER_TAG=$(echo "${GITHUB_REF_NAME}" | sed '/^release\b\|^hotfix\b\|^feature\b/s/release.*\/\|hotfix.*\/\|feature.*\///; s/-git-action$//; s/^v//').${{github.run_number}}
          export DOCKER_TAG

          docker buildx bake -f build.yml \
          --set *.args.GIT_BRANCH=$GITHUB_REF_NAME \
          --set *.platform=linux/amd64 \
          --push
        shell: bash

      - name: Install curl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
          sudo apt-get remove --purge -y curl
          sudo rm -rf /var/lib/apt/lists/*
        
      - name: Scan default branch image 
        run: |
          cd .${DOCKER_PATH}
          mkdir $REPO
          DOCKER_IMAGES=$(grep -oP '(?<=image: ")[^"]+' $FILE | sed -e "s/\${REPO}/$REPO/g ;  s/\${DOCKER_IMAGE_PREFIX}/$DOCKER_IMAGE_PREFIX/g ; s/\${DOCKER_TAG}/$DOCKER_TAG/g" |  tr '\n' ' ' )
          IFS=" " read -a IMAGES <<< "$DOCKER_IMAGES"
          for IMAGE in ${IMAGES[@]}; do
            FILENAME=$(echo "$IMAGE-cves.html" | tr ":" "-")
            docker scout cves --format=markdown --only-severity=critical,high "$IMAGE" > $FILENAME
            docker scout recommendations -o "$IMAGE"
            mv "$IMAGE" "${IMAGE//:/-}"
          done

      - name: Upload CVE Files
        uses: actions/upload-artifact@v2
        with:
          name: cve-results${{github.run_number}}
          path: .${{env.DOCKER_PATH}}/${{env.REPO}}/*
