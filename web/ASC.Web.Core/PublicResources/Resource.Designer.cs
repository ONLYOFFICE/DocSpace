//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASC.Web.Core.PublicResources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ASC.Web.Core.PublicResources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation code field cannot be empty.
        /// </summary>
        public static string ActivateMobilePhoneEmptyCode {
            get {
                return ResourceManager.GetString("ActivateMobilePhoneEmptyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter mobile phone number.
        /// </summary>
        public static string ActivateMobilePhoneEmptyPhoneNumber {
            get {
                return ResourceManager.GetString("ActivateMobilePhoneEmptyPhoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation code field cannot be empty.
        /// </summary>
        public static string ActivateTfaAppEmptyCode {
            get {
                return ResourceManager.GetString("ActivateTfaAppEmptyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator Notifications.
        /// </summary>
        public static string AdministratorNotifySenderTypeName {
            get {
                return ResourceManager.GetString("AdministratorNotifySenderTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your message was successfully sent. You will be contacted by the portal administrator..
        /// </summary>
        public static string AdminMessageSent {
            get {
                return ResourceManager.GetString("AdminMessageSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By SMS.
        /// </summary>
        public static string ButtonSmsEnable {
            get {
                return ResourceManager.GetString("ButtonSmsEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By authenticator app.
        /// </summary>
        public static string ButtonTfaAppEnable {
            get {
                return ResourceManager.GetString("ButtonTfaAppEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A link to confirm the operation has been sent to :email (the email address of the portal owner)..
        /// </summary>
        public static string ChangePortalOwnerMsg {
            get {
                return ResourceManager.GetString("ChangePortalOwnerMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S3 accesskey.
        /// </summary>
        public static string Consumersacesskey {
            get {
                return ResourceManager.GetString("Consumersacesskey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rackspace apiKey.
        /// </summary>
        public static string ConsumersapiKey {
            get {
                return ResourceManager.GetString("ConsumersapiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selectel authPwd.
        /// </summary>
        public static string ConsumersauthPwd {
            get {
                return ResourceManager.GetString("ConsumersauthPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selectel authUser.
        /// </summary>
        public static string ConsumersauthUser {
            get {
                return ResourceManager.GetString("ConsumersauthUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitly.
        /// </summary>
        public static string ConsumersBitly {
            get {
                return ResourceManager.GetString("ConsumersBitly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to login.
        /// </summary>
        public static string ConsumersbitlyClientId {
            get {
                return ResourceManager.GetString("ConsumersbitlyClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to apiKey.
        /// </summary>
        public static string ConsumersbitlyClientSecret {
            get {
                return ResourceManager.GetString("ConsumersbitlyClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this application to shorten portal invitation links and shared links in the Documents module with the Bitly service..
        /// </summary>
        public static string ConsumersBitlyDescription {
            get {
                return ResourceManager.GetString("ConsumersBitlyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add the Bitly service you will get shortened links to invite new users to the ONLYOFFICE™ portal and shortened links to documents in the Documents module that have been shared with external users..
        /// </summary>
        public static string ConsumersBitlyInstruction {
            get {
                return ResourceManager.GetString("ConsumersBitlyInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to shorten the invitation and document links. {0}Insert your Bitly login and API key below:.
        /// </summary>
        public static string ConsumersBitlyInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersBitlyInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Box.
        /// </summary>
        public static string ConsumersBox {
            get {
                return ResourceManager.GetString("ConsumersBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Box ID.
        /// </summary>
        public static string ConsumersboxClientId {
            get {
                return ResourceManager.GetString("ConsumersboxClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Box Key.
        /// </summary>
        public static string ConsumersboxClientSecret {
            get {
                return ResourceManager.GetString("ConsumersboxClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to manage Box files and folders..
        /// </summary>
        public static string ConsumersBoxDescription {
            get {
                return ResourceManager.GetString("ConsumersBoxDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the Box service you will be able to connect your Box account in the Documents module. This will allow to upload and create new files in Box, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersBoxInstruction {
            get {
                return ResourceManager.GetString("ConsumersBoxInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to connect your Box account to the Documents module. You’ll be able to manage, edit, and share files from Box with ONLYOFFICE users. {0}Sign in to your account on the Box developers page and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersBoxInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersBoxInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clickatell.
        /// </summary>
        public static string ConsumersClickatell {
            get {
                return ResourceManager.GetString("ConsumersClickatell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to apiKey.
        /// </summary>
        public static string ConsumersclickatellapiKey {
            get {
                return ResourceManager.GetString("ConsumersclickatellapiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application for the two-factor authentication via Clickatell..
        /// </summary>
        public static string ConsumersClickatellDescription {
            get {
                return ResourceManager.GetString("ConsumersClickatellDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the Clickatell service application you will be able to enable the two-factor authentication and receive an SMS with a code allowing the user to enter ONLYOFFICE portal..
        /// </summary>
        public static string ConsumersClickatellInstruction {
            get {
                return ResourceManager.GetString("ConsumersClickatellInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this app to enable two-factor authentication with Clickatell service. {0}Sign in to your SMS Platform account and create a new integration for ONLYOFFICE. Copy an apiKey and insert it below:.
        /// </summary>
        public static string ConsumersClickatellInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersClickatellInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DocuSign.
        /// </summary>
        public static string ConsumersDocuSign {
            get {
                return ResourceManager.GetString("ConsumersDocuSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DocuSign Key.
        /// </summary>
        public static string ConsumersdocuSignClientId {
            get {
                return ResourceManager.GetString("ConsumersdocuSignClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DocuSign Secret.
        /// </summary>
        public static string ConsumersdocuSignClientSecret {
            get {
                return ResourceManager.GetString("ConsumersdocuSignClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to digitally sign your documents with DocuSign..
        /// </summary>
        public static string ConsumersDocuSignDescription {
            get {
                return ResourceManager.GetString("ConsumersDocuSignDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DocuSign authentication endpoint.
        /// </summary>
        public static string ConsumersdocuSignHost {
            get {
                return ResourceManager.GetString("ConsumersdocuSignHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the DocuSign service you will be able to sign files from the Documents module. This will allow to send a file for electronic signature to the ONLYOFFICE™ portal employees via the DocuSugn service. The signed file will be saved in the ONLYOFFICE™ Documents module..
        /// </summary>
        public static string ConsumersDocuSignInstruction {
            get {
                return ResourceManager.GetString("ConsumersDocuSignInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to digitally sign documents using DocuSign. {0}Go to your DocuSign Admin Console and add ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersDocuSignInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersDocuSignInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DropBox.
        /// </summary>
        public static string ConsumersDropBox {
            get {
                return ResourceManager.GetString("ConsumersDropBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to manage Dropbox files and folders..
        /// </summary>
        public static string ConsumersDropBoxDescription {
            get {
                return ResourceManager.GetString("ConsumersDropBoxDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the Dropbox service you will be able to connect your Dropbox account in the Documents module. This will allow to upload and create new files in Dropbox, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersDropBoxInstruction {
            get {
                return ResourceManager.GetString("ConsumersDropBoxInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to connect your Dropbox account to the Documents module. You’ll be able to manage, edit, and share files from Dropbox with ONLYOFFICE users. {0}Sign in to your account on the Dropbox Developers website and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersDropBoxInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersDropBoxInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DropBox ID.
        /// </summary>
        public static string ConsumersDropBoxKey {
            get {
                return ResourceManager.GetString("ConsumersDropBoxKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DropBox Key.
        /// </summary>
        public static string ConsumersDropBoxSecret {
            get {
                return ResourceManager.GetString("ConsumersDropBoxSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EasyBib.
        /// </summary>
        public static string ConsumersEasyBib {
            get {
                return ResourceManager.GetString("ConsumersEasyBib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App key.
        /// </summary>
        public static string ConsumerseasyBibappkey {
            get {
                return ResourceManager.GetString("ConsumerseasyBibappkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this application to create bibliographic lists in documents with EasyBib..
        /// </summary>
        public static string ConsumersEasyBibDescription {
            get {
                return ResourceManager.GetString("ConsumersEasyBibDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add the EasyBib application, you can easily create bibliographic lists in your documents..
        /// </summary>
        public static string ConsumersEasyBibInstruction {
            get {
                return ResourceManager.GetString("ConsumersEasyBibInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Facebook.
        /// </summary>
        public static string ConsumersFacebook {
            get {
                return ResourceManager.GetString("ConsumersFacebook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Token.
        /// </summary>
        public static string ConsumersfacebookAccessToken_Default {
            get {
                return ResourceManager.GetString("ConsumersfacebookAccessToken_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Facebook ID.
        /// </summary>
        public static string ConsumersfacebookClientId {
            get {
                return ResourceManager.GetString("ConsumersfacebookClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Facebook Key.
        /// </summary>
        public static string ConsumersfacebookClientSecret {
            get {
                return ResourceManager.GetString("ConsumersfacebookClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a Facebook account..
        /// </summary>
        public static string ConsumersFacebookDescription {
            get {
                return ResourceManager.GetString("ConsumersFacebookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the Facebook service you will be able to connect your Facebook account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it. You will also be able to find a Facebook account of a contact in the CRM module and link it on the &apos;Edit person/company&apos; page..
        /// </summary>
        public static string ConsumersFacebookInstruction {
            get {
                return ResourceManager.GetString("ConsumersFacebookInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to allow your users to sign in to ONLYOFFICE using Facebook and link their customers’ Facebook accounts to the CRM module. {0}Go to Facebook Developers Portal and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersFacebookInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersFacebookInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firebase.
        /// </summary>
        public static string ConsumersFirebase {
            get {
                return ResourceManager.GetString("ConsumersFirebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web API key.
        /// </summary>
        public static string Consumersfirebase_apiKey {
            get {
                return ResourceManager.GetString("Consumersfirebase_apiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server key.
        /// </summary>
        public static string Consumersfirebase_authorization {
            get {
                return ResourceManager.GetString("Consumersfirebase_authorization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sender ID.
        /// </summary>
        public static string Consumersfirebase_messagingSenderId {
            get {
                return ResourceManager.GetString("Consumersfirebase_messagingSenderId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project ID.
        /// </summary>
        public static string Consumersfirebase_projectId {
            get {
                return ResourceManager.GetString("Consumersfirebase_projectId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this application to receive notifications about the messages sent to you with Firebase Cloud Messaging..
        /// </summary>
        public static string ConsumersFirebaseDescription {
            get {
                return ResourceManager.GetString("ConsumersFirebaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you connect Firebase Cloud Messaging you will be able to receive notifications about the messages sent to you even when you are offline..
        /// </summary>
        public static string ConsumersFirebaseInstruction {
            get {
                return ResourceManager.GetString("ConsumersFirebaseInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google.
        /// </summary>
        public static string ConsumersGoogle {
            get {
                return ResourceManager.GetString("ConsumersGoogle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google ID.
        /// </summary>
        public static string ConsumersgoogleClientId {
            get {
                return ResourceManager.GetString("ConsumersgoogleClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Key.
        /// </summary>
        public static string ConsumersgoogleClientSecret {
            get {
                return ResourceManager.GetString("ConsumersgoogleClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Cloud Storage.
        /// </summary>
        public static string ConsumersGoogleCloud {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bucket.
        /// </summary>
        public static string ConsumersGoogleCloudbucket {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudbucket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the Google Cloud bucket for storing backups..
        /// </summary>
        public static string ConsumersGoogleCloudbucketDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudbucketDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Google Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersGoogleCloudDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add Google Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersGoogleCloudInstruction {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GoogleCloud json.
        /// </summary>
        public static string ConsumersGoogleCloudjson {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudjson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect the project to sign in to the portal using a Google account and manage Google Drive files and folders..
        /// </summary>
        public static string ConsumersGoogleDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add a project of the Google service you will be able to connect your Google account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it as well as connect your Google Drive account in the Documents module. This will allow to upload and create new files in Google Drive, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersGoogleInstruction {
            get {
                return ResourceManager.GetString("ConsumersGoogleInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to connect your Google Drive account to the Documents module. You’ll be able to manage, edit, and share files from Google Drive with ONLYOFFICE users. {0}Go to Google APIs console and create a new project for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersGoogleInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersGoogleInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LinkedIn.
        /// </summary>
        public static string ConsumersLinkedIn {
            get {
                return ResourceManager.GetString("ConsumersLinkedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a LinkedIn account..
        /// </summary>
        public static string ConsumersLinkedInDescription {
            get {
                return ResourceManager.GetString("ConsumersLinkedInDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the LinkedIn service you will be able to connect your LinkedIn account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it..
        /// </summary>
        public static string ConsumersLinkedInInstruction {
            get {
                return ResourceManager.GetString("ConsumersLinkedInInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to allow your users to sign in to ONLYOFFICE using their LinkedIn accounts. {0}Go to the  LinkedIn Developers website and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersLinkedInInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersLinkedInInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linkedin ID.
        /// </summary>
        public static string ConsumersLinkedInKey {
            get {
                return ResourceManager.GetString("ConsumersLinkedInKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linkedin Key.
        /// </summary>
        public static string ConsumersLinkedInSecret {
            get {
                return ResourceManager.GetString("ConsumersLinkedInSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mail.ru.
        /// </summary>
        public static string ConsumersMailru {
            get {
                return ResourceManager.GetString("ConsumersMailru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string ConsumersMailruClientId {
            get {
                return ResourceManager.GetString("ConsumersMailruClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret key.
        /// </summary>
        public static string ConsumersMailruClientSecret {
            get {
                return ResourceManager.GetString("ConsumersMailruClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a Mail.ru account..
        /// </summary>
        public static string ConsumersMailruDescription {
            get {
                return ResourceManager.GetString("ConsumersMailruDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add the Mail.ru application you can enable signing in to the portal using the Mail.ru account on your profile page..
        /// </summary>
        public static string ConsumersMailruInstruction {
            get {
                return ResourceManager.GetString("ConsumersMailruInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rackspace Cloud Storage.
        /// </summary>
        public static string ConsumersRackspace {
            get {
                return ResourceManager.GetString("ConsumersRackspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Rackspace Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersRackspaceDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add Rackspace Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersRackspaceInstruction {
            get {
                return ResourceManager.GetString("ConsumersRackspaceInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Container.
        /// </summary>
        public static string ConsumersRackspaceprivate_container {
            get {
                return ResourceManager.GetString("ConsumersRackspaceprivate_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the URL address of the Rackspace private container for storing backups..
        /// </summary>
        public static string ConsumersRackspaceprivate_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceprivate_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Container.
        /// </summary>
        public static string ConsumersRackspacepublic_container {
            get {
                return ResourceManager.GetString("ConsumersRackspacepublic_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the URL address of the Rackspace public container for storing backups..
        /// </summary>
        public static string ConsumersRackspacepublic_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspacepublic_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Region.
        /// </summary>
        public static string ConsumersRackspaceregion {
            get {
                return ResourceManager.GetString("ConsumersRackspaceregion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the region where your Rackspace containers are located..
        /// </summary>
        public static string ConsumersRackspaceregionDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceregionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amazon AWS S3.
        /// </summary>
        public static string ConsumersS3 {
            get {
                return ResourceManager.GetString("ConsumersS3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bucket.
        /// </summary>
        public static string ConsumersS3bucket {
            get {
                return ResourceManager.GetString("ConsumersS3bucket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the unique name of the Amazon bucket for storing backups..
        /// </summary>
        public static string ConsumersS3bucketDescription {
            get {
                return ResourceManager.GetString("ConsumersS3bucketDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Amazon AWS S3 to backup and store data from your portal..
        /// </summary>
        public static string ConsumersS3Description {
            get {
                return ResourceManager.GetString("ConsumersS3Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add Amazon AWS S3 to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersS3Instruction {
            get {
                return ResourceManager.GetString("ConsumersS3Instruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Region.
        /// </summary>
        public static string ConsumersS3region {
            get {
                return ResourceManager.GetString("ConsumersS3region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the AWS region where your Amazon bucket resides..
        /// </summary>
        public static string ConsumersS3regionDescription {
            get {
                return ResourceManager.GetString("ConsumersS3regionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S3 secret access key.
        /// </summary>
        public static string Consumerssecretaccesskey {
            get {
                return ResourceManager.GetString("Consumerssecretaccesskey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selectel Cloud Storage.
        /// </summary>
        public static string ConsumersSelectel {
            get {
                return ResourceManager.GetString("ConsumersSelectel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password to access the storage.
        /// </summary>
        public static string ConsumersSelectelauthPwd {
            get {
                return ResourceManager.GetString("ConsumersSelectelauthPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auth User.
        /// </summary>
        public static string ConsumersSelectelauthUser {
            get {
                return ResourceManager.GetString("ConsumersSelectelauthUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Selectel Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersSelectelDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add Selectel Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersSelectelInstruction {
            get {
                return ResourceManager.GetString("ConsumersSelectelInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private container.
        /// </summary>
        public static string ConsumersSelectelprivate_container {
            get {
                return ResourceManager.GetString("ConsumersSelectelprivate_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the Selectel private container for storing backups..
        /// </summary>
        public static string ConsumersSelectelprivate_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelprivate_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public container.
        /// </summary>
        public static string ConsumersSelectelpublic_container {
            get {
                return ResourceManager.GetString("ConsumersSelectelpublic_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the Selectel public container for storing backups..
        /// </summary>
        public static string ConsumersSelectelpublic_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelpublic_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OneDrive.
        /// </summary>
        public static string ConsumersSkyDrive {
            get {
                return ResourceManager.GetString("ConsumersSkyDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application ID.
        /// </summary>
        public static string Consumersskydriveappkey {
            get {
                return ResourceManager.GetString("Consumersskydriveappkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client secret.
        /// </summary>
        public static string Consumersskydriveappsecret {
            get {
                return ResourceManager.GetString("Consumersskydriveappsecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to manage OneDrive files and folders..
        /// </summary>
        public static string ConsumersSkyDriveDescription {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the OneDrive service you will be able to connect your OneDrive account in the Documents module. This will allow to upload and create new files in OneDrive, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersSkyDriveInstruction {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to connect your OneDrive account to the Documents module. You’ll be able to manage, edit, and share files from OneDrive with ONLYOFFICE users. {0}Sign in to your Microsoft Azure account and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersSkyDriveInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMS Center.
        /// </summary>
        public static string ConsumersSmsc {
            get {
                return ResourceManager.GetString("ConsumersSmsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application for the two-factor authentication via SMS Center..
        /// </summary>
        public static string ConsumersSmscDescription {
            get {
                return ResourceManager.GetString("ConsumersSmscDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the SMS Center service application you will be able to enable the two-factor authentication and receive an SMS with a code allowing the user to enter ONLYOFFICE portal. SMS Center application is useful as a provider for CIS countries..
        /// </summary>
        public static string ConsumersSmscInstruction {
            get {
                return ResourceManager.GetString("ConsumersSmscInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this app to enable two-factor authentication with SMS Center service. {0}Insert your smsc account login and your password (or password MD5 hash) in lower case:.
        /// </summary>
        public static string ConsumersSmscInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersSmscInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        public static string Consumerssmsclogin {
            get {
                return ResourceManager.GetString("Consumerssmsclogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password or password MD5 hash in lowercase.
        /// </summary>
        public static string Consumerssmscpsw {
            get {
                return ResourceManager.GetString("Consumerssmscpsw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telegram.
        /// </summary>
        public static string ConsumersTelegram {
            get {
                return ResourceManager.GetString("ConsumersTelegram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot username.
        /// </summary>
        public static string ConsumersTelegramBotName {
            get {
                return ResourceManager.GetString("ConsumersTelegramBotName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot token.
        /// </summary>
        public static string ConsumersTelegramBotToken {
            get {
                return ResourceManager.GetString("ConsumersTelegramBotToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Telegram account to receive portal notifications via Telegram..
        /// </summary>
        public static string ConsumersTelegramDescription {
            get {
                return ResourceManager.GetString("ConsumersTelegramDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To receive portal notifications via Telegram, enable Telegram bot. You can create a new bot using BotFather in Telegram Desktop. To use this bot, portal users need to enable Telegram notifications on their Profile Page. {0}Paste bot’s username and the token you received in the fields below..
        /// </summary>
        public static string ConsumersTelegramInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersTelegramInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twilio.
        /// </summary>
        public static string ConsumersTwilio {
            get {
                return ResourceManager.GetString("ConsumersTwilio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Sid.
        /// </summary>
        public static string ConsumerstwilioAccountSid {
            get {
                return ResourceManager.GetString("ConsumerstwilioAccountSid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auth Token.
        /// </summary>
        public static string ConsumerstwilioAuthToken {
            get {
                return ResourceManager.GetString("ConsumerstwilioAuthToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this application to call CRM contacts with Twilio..
        /// </summary>
        public static string ConsumersTwilioDescription {
            get {
                return ResourceManager.GetString("ConsumersTwilioDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After you add Twilio, you will be able to call any CRM contact right from the browser..
        /// </summary>
        public static string ConsumersTwilioInstruction {
            get {
                return ResourceManager.GetString("ConsumersTwilioInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to allow your users to call their contacts from the CRM module using Twilio. {0}Go to Twilio Console and paste the following data below:.
        /// </summary>
        public static string ConsumersTwilioInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersTwilioInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone number from Twilio (required for SMS authorization).
        /// </summary>
        public static string Consumerstwiliosender {
            get {
                return ResourceManager.GetString("Consumerstwiliosender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twitter.
        /// </summary>
        public static string ConsumersTwitter {
            get {
                return ResourceManager.GetString("ConsumersTwitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Token.
        /// </summary>
        public static string ConsumerstwitterAccessToken_Default {
            get {
                return ResourceManager.GetString("ConsumerstwitterAccessToken_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Token Secret.
        /// </summary>
        public static string ConsumerstwitterAccessTokenSecret_Default {
            get {
                return ResourceManager.GetString("ConsumerstwitterAccessTokenSecret_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a Twitter account and search for contacts..
        /// </summary>
        public static string ConsumersTwitterDescription {
            get {
                return ResourceManager.GetString("ConsumersTwitterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you add an application of the Twitter service you will be able to connect your Twitter account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it. You will also be able to find a Twitter account of a person in the CRM module and link it on the &apos;Edit person/company&apos; page and then view Twitter news feed..
        /// </summary>
        public static string ConsumersTwitterInstruction {
            get {
                return ResourceManager.GetString("ConsumersTwitterInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to allow your users to sign in to ONLYOFFICE using their Twitter and link their customers’ Twitter accounts to the CRM module. {0}Go to Twitter Developers Portal and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersTwitterInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersTwitterInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twitter ID.
        /// </summary>
        public static string ConsumersTwitterKey {
            get {
                return ResourceManager.GetString("ConsumersTwitterKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twitter Key.
        /// </summary>
        public static string ConsumersTwitterSecret {
            get {
                return ResourceManager.GetString("ConsumersTwitterSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rackspace username.
        /// </summary>
        public static string Consumersusername {
            get {
                return ResourceManager.GetString("Consumersusername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VK.
        /// </summary>
        public static string ConsumersVk {
            get {
                return ResourceManager.GetString("ConsumersVk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application ID.
        /// </summary>
        public static string ConsumersVkClientId {
            get {
                return ResourceManager.GetString("ConsumersVkClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure key.
        /// </summary>
        public static string ConsumersVkClientSecret {
            get {
                return ResourceManager.GetString("ConsumersVkClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a VK account..
        /// </summary>
        public static string ConsumersVkDescription {
            get {
                return ResourceManager.GetString("ConsumersVkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add the VK application you can enable signing in to the portal using the VK account on your profile page..
        /// </summary>
        public static string ConsumersVkInstruction {
            get {
                return ResourceManager.GetString("ConsumersVkInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WordPress.
        /// </summary>
        public static string ConsumersWordpress {
            get {
                return ResourceManager.GetString("ConsumersWordpress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to publish documents directly in WordPress..
        /// </summary>
        public static string ConsumersWordpressDescription {
            get {
                return ResourceManager.GetString("ConsumersWordpressDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the WordPress application you can easily publish the documents on your WordPress website, saving their formatting..
        /// </summary>
        public static string ConsumersWordpressInstruction {
            get {
                return ResourceManager.GetString("ConsumersWordpressInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WordPress Key.
        /// </summary>
        public static string ConsumerswpClientId {
            get {
                return ResourceManager.GetString("ConsumerswpClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WordPress Secret.
        /// </summary>
        public static string ConsumerswpClientSecret {
            get {
                return ResourceManager.GetString("ConsumerswpClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yahoo.
        /// </summary>
        public static string ConsumersYahoo {
            get {
                return ResourceManager.GetString("ConsumersYahoo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client ID.
        /// </summary>
        public static string ConsumersyahooClientId {
            get {
                return ResourceManager.GetString("ConsumersyahooClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Secret.
        /// </summary>
        public static string ConsumersyahooClientSecret {
            get {
                return ResourceManager.GetString("ConsumersyahooClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to import users from the Yahoo service..
        /// </summary>
        public static string ConsumersYahooDescription {
            get {
                return ResourceManager.GetString("ConsumersYahooDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding the Yahoo service application you will be able to add ONLYOFFICE portal new users from the contact list..
        /// </summary>
        public static string ConsumersYahooInstruction {
            get {
                return ResourceManager.GetString("ConsumersYahooInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this app to add new portal users from your Yahoo contact list. {0}Go to the Create Application page in the Yahoo Developer Network and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersYahooInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersYahooInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yandex.
        /// </summary>
        public static string ConsumersYandex {
            get {
                return ResourceManager.GetString("ConsumersYandex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string ConsumersYandexClientId {
            get {
                return ResourceManager.GetString("ConsumersYandexClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string ConsumersYandexClientSecret {
            get {
                return ResourceManager.GetString("ConsumersYandexClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the application to sign in to the portal using a Yandex account..
        /// </summary>
        public static string ConsumersYandexDescription {
            get {
                return ResourceManager.GetString("ConsumersYandexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you add the Yandex application you can enable signing in to the portal using the Yandex account on your profile page..
        /// </summary>
        public static string ConsumersYandexInstruction {
            get {
                return ResourceManager.GetString("ConsumersYandexInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password recovery operation is prohibited for an LDAP user.
        /// </summary>
        public static string CouldNotRecoverPasswordForLdapUser {
            get {
                return ResourceManager.GetString("CouldNotRecoverPasswordForLdapUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password recovery operation is prohibited for an SSO user.
        /// </summary>
        public static string CouldNotRecoverPasswordForSsoUser {
            get {
                return ResourceManager.GetString("CouldNotRecoverPasswordForSsoUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string CustomNamingPeopleSchema {
            get {
                return ResourceManager.GetString("CustomNamingPeopleSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A link to confirm the operation has been sent to {0} (the email address of the portal owner)..
        /// </summary>
        public static string DnsChangeMsg {
            get {
                return ResourceManager.GetString("DnsChangeMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Instance id..
        /// </summary>
        public static string EmailAndPasswordIncorrectAmiId {
            get {
                return ResourceManager.GetString("EmailAndPasswordIncorrectAmiId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect email address.
        /// </summary>
        public static string EmailAndPasswordIncorrectEmail {
            get {
                return ResourceManager.GetString("EmailAndPasswordIncorrectEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No permissions to perform this action.
        /// </summary>
        public static string ErrorAccessDenied {
            get {
                return ResourceManager.GetString("ErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access to the portal is restricted..
        /// </summary>
        public static string ErrorAccessRestricted {
            get {
                return ResourceManager.GetString("ErrorAccessRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad keys.
        /// </summary>
        public static string ErrorBadKeys {
            get {
                return ResourceManager.GetString("ErrorBadKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your profile is suspended.
        /// </summary>
        public static string ErrorDisabledProfile {
            get {
                return ResourceManager.GetString("ErrorDisabledProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {!User} with this email is already registered.
        /// </summary>
        public static string ErrorEmailAlreadyExists {
            get {
                return ResourceManager.GetString("ErrorEmailAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emails from this domain are not allowed for registration.
        /// </summary>
        public static string ErrorEmailDomainNotAllowed {
            get {
                return ResourceManager.GetString("ErrorEmailDomainNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email field is empty.
        /// </summary>
        public static string ErrorEmailEmpty {
            get {
                return ResourceManager.GetString("ErrorEmailEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current email and the new email are the same.
        /// </summary>
        public static string ErrorEmailsAreTheSame {
            get {
                return ResourceManager.GetString("ErrorEmailsAreTheSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please fill in all fields.
        /// </summary>
        public static string ErrorEmptyFields {
            get {
                return ResourceManager.GetString("ErrorEmptyFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message text is empty.
        /// </summary>
        public static string ErrorEmptyMessage {
            get {
                return ResourceManager.GetString("ErrorEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uploaded file could not be found.
        /// </summary>
        public static string ErrorEmptyUploadFileSelected {
            get {
                return ResourceManager.GetString("ErrorEmptyUploadFileSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown image file type.
        /// </summary>
        public static string ErrorFileNotImage {
            get {
                return ResourceManager.GetString("ErrorFileNotImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image size exceed the allowed parameters.
        /// </summary>
        public static string ErrorImageSize {
            get {
                return ResourceManager.GetString("ErrorImageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image file size is too large.
        /// </summary>
        public static string ErrorImageWeightLimit {
            get {
                return ResourceManager.GetString("ErrorImageWeightLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect firstname or lastname.
        /// </summary>
        public static string ErrorIncorrectUserName {
            get {
                return ResourceManager.GetString("ErrorIncorrectUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access to the portal is restricted.
        /// </summary>
        public static string ErrorIpSecurity {
            get {
                return ResourceManager.GetString("ErrorIpSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your pricing plan does not support this option.
        /// </summary>
        public static string ErrorNotAllowedOption {
            get {
                return ResourceManager.GetString("ErrorNotAllowedOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect email.
        /// </summary>
        public static string ErrorNotCorrectEmail {
            get {
                return ResourceManager.GetString("ErrorNotCorrectEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid domain name.
        /// </summary>
        public static string ErrorNotCorrectTrustedDomain {
            get {
                return ResourceManager.GetString("ErrorNotCorrectTrustedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is empty..
        /// </summary>
        public static string ErrorPasswordEmpty {
            get {
                return ResourceManager.GetString("ErrorPasswordEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to from {0} to {1} characters.
        /// </summary>
        public static string ErrorPasswordLength {
            get {
                return ResourceManager.GetString("ErrorPasswordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must contain.
        /// </summary>
        public static string ErrorPasswordMessage {
            get {
                return ResourceManager.GetString("ErrorPasswordMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to digits.
        /// </summary>
        public static string ErrorPasswordNoDigits {
            get {
                return ResourceManager.GetString("ErrorPasswordNoDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no spaces.
        /// </summary>
        public static string ErrorPasswordNoSpaces {
            get {
                return ResourceManager.GetString("ErrorPasswordNoSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to special characters.
        /// </summary>
        public static string ErrorPasswordNoSpecialSymbols {
            get {
                return ResourceManager.GetString("ErrorPasswordNoSpecialSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to capital letters.
        /// </summary>
        public static string ErrorPasswordNoUpperCase {
            get {
                return ResourceManager.GetString("ErrorPasswordNoUpperCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to only latin letters.
        /// </summary>
        public static string ErrorPasswordOnlyLatinLetters {
            get {
                return ResourceManager.GetString("ErrorPasswordOnlyLatinLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request limit is exceeded.
        /// </summary>
        public static string ErrorRequestLimitExceeded {
            get {
                return ResourceManager.GetString("ErrorRequestLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tenant domain can not be empty..
        /// </summary>
        public static string ErrorTenantTooShort {
            get {
                return ResourceManager.GetString("ErrorTenantTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain name must be between {0} and {1} characters long..
        /// </summary>
        public static string ErrorTenantTooShortFormat {
            get {
                return ResourceManager.GetString("ErrorTenantTooShortFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user could not be found.
        /// </summary>
        public static string ErrorUserNotFound {
            get {
                return ResourceManager.GetString("ErrorUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user with &quot;{0}&quot; email could not be found.
        /// </summary>
        public static string ErrorUserNotFoundByEmail {
            get {
                return ResourceManager.GetString("ErrorUserNotFoundByEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EU (Frankfurt) Region.
        /// </summary>
        public static string EuServerRegion {
            get {
                return ResourceManager.GetString("EuServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum file size is exceeded.
        /// </summary>
        public static string FileSizeMaxExceed {
            get {
                return ResourceManager.GetString("FileSizeMaxExceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: the file size cannot exceed {1}{0}{2}.
        /// </summary>
        public static string FileSizeNote {
            get {
                return ResourceManager.GetString("FileSizeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bytes,KB,MB,GB,TB.
        /// </summary>
        public static string FileSizePostfix {
            get {
                return ResourceManager.GetString("FileSizePostfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The link to confirm your account has been sent to the specified email.
        /// </summary>
        public static string FinishInviteJoinEmailMessage {
            get {
                return ResourceManager.GetString("FinishInviteJoinEmailMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server could not save settings..
        /// </summary>
        public static string LdapSettingsErrorCantSaveLdapSettings {
            get {
                return ResourceManager.GetString("LdapSettingsErrorCantSaveLdapSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many LDAP operations..
        /// </summary>
        public static string LdapSettingsTooManyOperations {
            get {
                return ResourceManager.GetString("LdapSettingsTooManyOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License is not correct.
        /// </summary>
        public static string LicenseError {
            get {
                return ResourceManager.GetString("LicenseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is not valid for this portal version..
        /// </summary>
        public static string LicenseErrorExpired {
            get {
                return ResourceManager.GetString("LicenseErrorExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of portals exceeds the one allowed by the license.
        /// </summary>
        public static string LicenseErrorPortal {
            get {
                return ResourceManager.GetString("LicenseErrorPortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of users exceeds the one allowed by the license.
        /// </summary>
        public static string LicenseErrorQuota {
            get {
                return ResourceManager.GetString("LicenseErrorQuota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded successfully.
        /// </summary>
        public static string LicenseUploaded {
            get {
                return ResourceManager.GetString("LicenseUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded successfully. {0}Support and updates are not available for this license since {2}.{1}.
        /// </summary>
        public static string LicenseUploadedOverdue {
            get {
                return ResourceManager.GetString("LicenseUploadedOverdue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded successfully. {0}Support are not available for this license since {2}.{1}.
        /// </summary>
        public static string LicenseUploadedOverdueSupport {
            get {
                return ResourceManager.GetString("LicenseUploadedOverdueSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email change instructions have been successfuly sent.
        /// </summary>
        public static string MessageEmailChangeInstuctionsSentOnEmail {
            get {
                return ResourceManager.GetString("MessageEmailChangeInstuctionsSentOnEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual room {0} invitations sent successfully..
        /// </summary>
        public static string MessageRoomInvitationsSentOnEmail {
            get {
                return ResourceManager.GetString("MessageRoomInvitationsSentOnEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a user with the {0} email exists, the password change instruction has been sent to this email address..
        /// </summary>
        public static string MessageYourPasswordSendedToEmail {
            get {
                return ResourceManager.GetString("MessageYourPasswordSendedToEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To change the number, you need to delete your current phone number.
        /// </summary>
        public static string MobilePhoneMustErase {
            get {
                return ResourceManager.GetString("MobilePhoneMustErase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ORG Region.
        /// </summary>
        public static string OrgServerRegion {
            get {
                return ResourceManager.GetString("OrgServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner.
        /// </summary>
        public static string Owner {
            get {
                return ResourceManager.GetString("Owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disk space quota exceeded.
        /// </summary>
        public static string PersonalFreeSpaceException {
            get {
                return ResourceManager.GetString("PersonalFreeSpaceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud space for your office docs.
        /// </summary>
        public static string PortalName {
            get {
                return ResourceManager.GetString("PortalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portal Access.
        /// </summary>
        public static string PortalSecurity {
            get {
                return ResourceManager.GetString("PortalSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the memory quota - the memory quota you set is greater than portals quota..
        /// </summary>
        public static string QuotaGreaterPortalError {
            get {
                return ResourceManager.GetString("QuotaGreaterPortalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the memory quota - some users cannot use this quota..
        /// </summary>
        public static string QuotaGroupError {
            get {
                return ResourceManager.GetString("QuotaGroupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the memory quota - the memory quota you set is less than used memory..
        /// </summary>
        public static string QuotaLessUsedMemoryError {
            get {
                return ResourceManager.GetString("QuotaLessUsedMemoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data reassign process for {0} is not complete..
        /// </summary>
        public static string ReassignDataRemoveUserError {
            get {
                return ResourceManager.GetString("ReassignDataRemoveUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Recaptcha.
        /// </summary>
        public static string RecaptchaInvalid {
            get {
                return ResourceManager.GetString("RecaptchaInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asia Pacific (Singapore).
        /// </summary>
        public static string SgServerRegion {
            get {
                return ResourceManager.GetString("SgServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect code.
        /// </summary>
        public static string SmsAuthenticationMessageError {
            get {
                return ResourceManager.GetString("SmsAuthenticationMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code: {0}.
        /// </summary>
        public static string SmsAuthenticationMessageToUser {
            get {
                return ResourceManager.GetString("SmsAuthenticationMessageToUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to use the code has expired. Please request a new text message..
        /// </summary>
        public static string SmsAuthenticationTimeout {
            get {
                return ResourceManager.GetString("SmsAuthenticationTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMS settings are not available.
        /// </summary>
        public static string SmsNotAvailable {
            get {
                return ResourceManager.GetString("SmsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have sent too many text messages. Please try again later..
        /// </summary>
        public static string SmsTooMuchError {
            get {
                return ResourceManager.GetString("SmsTooMuchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not save settings.
        /// </summary>
        public static string SsoSettingsCantSaveSettings {
            get {
                return ResourceManager.GetString("SsoSettingsCantSaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings could not be null.
        /// </summary>
        public static string SsoSettingsCouldNotBeNull {
            get {
                return ResourceManager.GetString("SsoSettingsCouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid binding: {0}.
        /// </summary>
        public static string SsoSettingsInvalidBinding {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid entityID.
        /// </summary>
        public static string SsoSettingsInvalidEntityId {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidEntityId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid fields mapping.
        /// </summary>
        public static string SsoSettingsInvalidMapping {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome Page settings have been successfully saved.
        /// </summary>
        public static string SuccessfullySaveGreetingSettingsMessage {
            get {
                return ResourceManager.GetString("SuccessfullySaveGreetingSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings have been successfully updated.
        /// </summary>
        public static string SuccessfullySaveSettingsMessage {
            get {
                return ResourceManager.GetString("SuccessfullySaveSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructions to delete your profile has been sent to {0} email address.
        /// </summary>
        public static string SuccessfullySentNotificationDeleteUserInfoMessage {
            get {
                return ResourceManager.GetString("SuccessfullySentNotificationDeleteUserInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Business.
        /// </summary>
        public static string Tariffs_admin {
            get {
                return ResourceManager.GetString("Tariffs_admin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup.
        /// </summary>
        public static string Tariffs_startup {
            get {
                return ResourceManager.GetString("Tariffs_startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracking user logins &amp; action.
        /// </summary>
        public static string TariffsFeature_audit {
            get {
                return ResourceManager.GetString("TariffsFeature_audit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max file size.
        /// </summary>
        public static string TariffsFeature_file_size {
            get {
                return ResourceManager.GetString("TariffsFeature_file_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file size should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_file_size_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_file_size_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of admins should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_manager_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_manager_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of admins.
        /// </summary>
        public static string TariffsFeature_manager_price_count {
            get {
                return ResourceManager.GetString("TariffsFeature_manager_price_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic backup &amp; recovery.
        /// </summary>
        public static string TariffsFeature_restore {
            get {
                return ResourceManager.GetString("TariffsFeature_restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited number of active rooms.
        /// </summary>
        public static string TariffsFeature_room {
            get {
                return ResourceManager.GetString("TariffsFeature_room", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of rooms should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_room_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_room_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSO.
        /// </summary>
        public static string TariffsFeature_sso {
            get {
                return ResourceManager.GetString("TariffsFeature_sso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} storage space.
        /// </summary>
        public static string TariffsFeature_total_size {
            get {
                return ResourceManager.GetString("TariffsFeature_total_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The used storage size should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_total_size_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_total_size_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage space.
        /// </summary>
        public static string TariffsFeature_total_size_price_count {
            get {
                return ResourceManager.GetString("TariffsFeature_total_size_price_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admins added:.
        /// </summary>
        public static string TariffsFeature_used_manager {
            get {
                return ResourceManager.GetString("TariffsFeature_used_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rooms:.
        /// </summary>
        public static string TariffsFeature_used_room {
            get {
                return ResourceManager.GetString("TariffsFeature_used_room", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage space used:.
        /// </summary>
        public static string TariffsFeature_used_total_size {
            get {
                return ResourceManager.GetString("TariffsFeature_used_total_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users in room:.
        /// </summary>
        public static string TariffsFeature_used_usersInRoom {
            get {
                return ResourceManager.GetString("TariffsFeature_used_usersInRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited number of users.
        /// </summary>
        public static string TariffsFeature_users {
            get {
                return ResourceManager.GetString("TariffsFeature_users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of users should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_users_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_users_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users in room.
        /// </summary>
        public static string TariffsFeature_usersInRoom {
            get {
                return ResourceManager.GetString("TariffsFeature_usersInRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of users in room should not exceed {0}.
        /// </summary>
        public static string TariffsFeature_usersInRoom_exception {
            get {
                return ResourceManager.GetString("TariffsFeature_usersInRoom_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branding &amp; customization.
        /// </summary>
        public static string TariffsFeature_whitelabel {
            get {
                return ResourceManager.GetString("TariffsFeature_whitelabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect code.
        /// </summary>
        public static string TfaAppAuthMessageError {
            get {
                return ResourceManager.GetString("TfaAppAuthMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TFA application settings are not available.
        /// </summary>
        public static string TfaAppNotAvailable {
            get {
                return ResourceManager.GetString("TfaAppNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have sent too many text messages. Please try again later..
        /// </summary>
        public static string TfaTooMuchError {
            get {
                return ResourceManager.GetString("TfaTooMuchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to US West (Oregon) Region.
        /// </summary>
        public static string UsServerRegion {
            get {
                return ResourceManager.GetString("UsServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What&apos;s New.
        /// </summary>
        public static string WhatsNewSubscriptionName {
            get {
                return ResourceManager.GetString("WhatsNewSubscriptionName", resourceCulture);
            }
        }
    }
}
