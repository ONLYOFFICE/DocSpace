//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASC.Web.Core.PublicResources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ASC.Web.Core.PublicResources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validation code field cannot be empty.
        /// </summary>
        public static string ActivateMobilePhoneEmptyCode {
            get {
                return ResourceManager.GetString("ActivateMobilePhoneEmptyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter mobile phone number.
        /// </summary>
        public static string ActivateMobilePhoneEmptyPhoneNumber {
            get {
                return ResourceManager.GetString("ActivateMobilePhoneEmptyPhoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validation code field cannot be empty.
        /// </summary>
        public static string ActivateTfaAppEmptyCode {
            get {
                return ResourceManager.GetString("ActivateTfaAppEmptyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Administrator Notifications.
        /// </summary>
        public static string AdministratorNotifySenderTypeName {
            get {
                return ResourceManager.GetString("AdministratorNotifySenderTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your message was successfully sent. You will be contacted by the portal administrator..
        /// </summary>
        public static string AdminMessageSent {
            get {
                return ResourceManager.GetString("AdminMessageSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на By SMS.
        /// </summary>
        public static string ButtonSmsEnable {
            get {
                return ResourceManager.GetString("ButtonSmsEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на By authenticator app.
        /// </summary>
        public static string ButtonTfaAppEnable {
            get {
                return ResourceManager.GetString("ButtonTfaAppEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A link to confirm the operation has been sent to :email (the email address of the portal owner)..
        /// </summary>
        public static string ChangePortalOwnerMsg {
            get {
                return ResourceManager.GetString("ChangePortalOwnerMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на S3 accesskey.
        /// </summary>
        public static string Consumersacesskey {
            get {
                return ResourceManager.GetString("Consumersacesskey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rackspace apiKey.
        /// </summary>
        public static string ConsumersapiKey {
            get {
                return ResourceManager.GetString("ConsumersapiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selectel authPwd.
        /// </summary>
        public static string ConsumersauthPwd {
            get {
                return ResourceManager.GetString("ConsumersauthPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selectel authUser.
        /// </summary>
        public static string ConsumersauthUser {
            get {
                return ResourceManager.GetString("ConsumersauthUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bitly.
        /// </summary>
        public static string ConsumersBitly {
            get {
                return ResourceManager.GetString("ConsumersBitly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на login.
        /// </summary>
        public static string ConsumersbitlyClientId {
            get {
                return ResourceManager.GetString("ConsumersbitlyClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на apiKey.
        /// </summary>
        public static string ConsumersbitlyClientSecret {
            get {
                return ResourceManager.GetString("ConsumersbitlyClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this application to shorten portal invitation links and shared links in the Documents module with the Bitly service..
        /// </summary>
        public static string ConsumersBitlyDescription {
            get {
                return ResourceManager.GetString("ConsumersBitlyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add the Bitly service you will get shortened links to invite new users to the ONLYOFFICE™ portal and shortened links to documents in the Documents module that have been shared with external users..
        /// </summary>
        public static string ConsumersBitlyInstruction {
            get {
                return ResourceManager.GetString("ConsumersBitlyInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to shorten the invitation and document links. {0}Insert your Bitly login and API key below:.
        /// </summary>
        public static string ConsumersBitlyInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersBitlyInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Box.
        /// </summary>
        public static string ConsumersBox {
            get {
                return ResourceManager.GetString("ConsumersBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Box ID.
        /// </summary>
        public static string ConsumersboxClientId {
            get {
                return ResourceManager.GetString("ConsumersboxClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Box Key.
        /// </summary>
        public static string ConsumersboxClientSecret {
            get {
                return ResourceManager.GetString("ConsumersboxClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to manage Box files and folders..
        /// </summary>
        public static string ConsumersBoxDescription {
            get {
                return ResourceManager.GetString("ConsumersBoxDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the Box service you will be able to connect your Box account in the Documents module. This will allow to upload and create new files in Box, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersBoxInstruction {
            get {
                return ResourceManager.GetString("ConsumersBoxInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to connect your Box account to the Documents module. You’ll be able to manage, edit, and share files from Box with ONLYOFFICE users. {0}Sign in to your account on the Box developers page and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersBoxInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersBoxInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clickatell.
        /// </summary>
        public static string ConsumersClickatell {
            get {
                return ResourceManager.GetString("ConsumersClickatell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на apiKey.
        /// </summary>
        public static string ConsumersclickatellapiKey {
            get {
                return ResourceManager.GetString("ConsumersclickatellapiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application for the two-factor authentication via Clickatell..
        /// </summary>
        public static string ConsumersClickatellDescription {
            get {
                return ResourceManager.GetString("ConsumersClickatellDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adding the Clickatell service application you will be able to enable the two-factor authentication and receive an SMS with a code allowing the user to enter ONLYOFFICE portal..
        /// </summary>
        public static string ConsumersClickatellInstruction {
            get {
                return ResourceManager.GetString("ConsumersClickatellInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use this app to enable two-factor authentication with Clickatell service. {0}Sign in to your SMS Platform account and create a new integration for ONLYOFFICE. Copy an apiKey and insert it below:.
        /// </summary>
        public static string ConsumersClickatellInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersClickatellInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DocuSign.
        /// </summary>
        public static string ConsumersDocuSign {
            get {
                return ResourceManager.GetString("ConsumersDocuSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DocuSign Key.
        /// </summary>
        public static string ConsumersdocuSignClientId {
            get {
                return ResourceManager.GetString("ConsumersdocuSignClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DocuSign Secret.
        /// </summary>
        public static string ConsumersdocuSignClientSecret {
            get {
                return ResourceManager.GetString("ConsumersdocuSignClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to digitally sign your documents with DocuSign..
        /// </summary>
        public static string ConsumersDocuSignDescription {
            get {
                return ResourceManager.GetString("ConsumersDocuSignDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DocuSign authentication endpoint.
        /// </summary>
        public static string ConsumersdocuSignHost {
            get {
                return ResourceManager.GetString("ConsumersdocuSignHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the DocuSign service you will be able to sign files from the Documents module. This will allow to send a file for electronic signature to the ONLYOFFICE™ portal employees via the DocuSugn service. The signed file will be saved in the ONLYOFFICE™ Documents module..
        /// </summary>
        public static string ConsumersDocuSignInstruction {
            get {
                return ResourceManager.GetString("ConsumersDocuSignInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to digitally sign documents using DocuSign. {0}Go to your DocuSign Admin Console and add ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersDocuSignInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersDocuSignInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DropBox.
        /// </summary>
        public static string ConsumersDropBox {
            get {
                return ResourceManager.GetString("ConsumersDropBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to manage Dropbox files and folders..
        /// </summary>
        public static string ConsumersDropBoxDescription {
            get {
                return ResourceManager.GetString("ConsumersDropBoxDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the Dropbox service you will be able to connect your Dropbox account in the Documents module. This will allow to upload and create new files in Dropbox, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersDropBoxInstruction {
            get {
                return ResourceManager.GetString("ConsumersDropBoxInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to connect your Dropbox account to the Documents module. You’ll be able to manage, edit, and share files from Dropbox with ONLYOFFICE users. {0}Sign in to your account on the Dropbox Developers website and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersDropBoxInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersDropBoxInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DropBox ID.
        /// </summary>
        public static string ConsumersDropBoxKey {
            get {
                return ResourceManager.GetString("ConsumersDropBoxKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DropBox Key.
        /// </summary>
        public static string ConsumersDropBoxSecret {
            get {
                return ResourceManager.GetString("ConsumersDropBoxSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EasyBib.
        /// </summary>
        public static string ConsumersEasyBib {
            get {
                return ResourceManager.GetString("ConsumersEasyBib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на App key.
        /// </summary>
        public static string ConsumerseasyBibappkey {
            get {
                return ResourceManager.GetString("ConsumerseasyBibappkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this application to create bibliographic lists in documents with EasyBib..
        /// </summary>
        public static string ConsumersEasyBibDescription {
            get {
                return ResourceManager.GetString("ConsumersEasyBibDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add the EasyBib application, you can easily create bibliographic lists in your documents..
        /// </summary>
        public static string ConsumersEasyBibInstruction {
            get {
                return ResourceManager.GetString("ConsumersEasyBibInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Facebook.
        /// </summary>
        public static string ConsumersFacebook {
            get {
                return ResourceManager.GetString("ConsumersFacebook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на App Token.
        /// </summary>
        public static string ConsumersfacebookAccessToken_Default {
            get {
                return ResourceManager.GetString("ConsumersfacebookAccessToken_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Facebook ID.
        /// </summary>
        public static string ConsumersfacebookClientId {
            get {
                return ResourceManager.GetString("ConsumersfacebookClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Facebook Key.
        /// </summary>
        public static string ConsumersfacebookClientSecret {
            get {
                return ResourceManager.GetString("ConsumersfacebookClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a Facebook account..
        /// </summary>
        public static string ConsumersFacebookDescription {
            get {
                return ResourceManager.GetString("ConsumersFacebookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the Facebook service you will be able to connect your Facebook account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it. You will also be able to find a Facebook account of a contact in the CRM module and link it on the &apos;Edit person/company&apos; page..
        /// </summary>
        public static string ConsumersFacebookInstruction {
            get {
                return ResourceManager.GetString("ConsumersFacebookInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to allow your users to sign in to ONLYOFFICE using Facebook and link their customers’ Facebook accounts to the CRM module. {0}Go to Facebook Developers Portal and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersFacebookInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersFacebookInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Firebase.
        /// </summary>
        public static string ConsumersFirebase {
            get {
                return ResourceManager.GetString("ConsumersFirebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Web API key.
        /// </summary>
        public static string Consumersfirebase_apiKey {
            get {
                return ResourceManager.GetString("Consumersfirebase_apiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server key.
        /// </summary>
        public static string Consumersfirebase_authorization {
            get {
                return ResourceManager.GetString("Consumersfirebase_authorization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sender ID.
        /// </summary>
        public static string Consumersfirebase_messagingSenderId {
            get {
                return ResourceManager.GetString("Consumersfirebase_messagingSenderId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Project ID.
        /// </summary>
        public static string Consumersfirebase_projectId {
            get {
                return ResourceManager.GetString("Consumersfirebase_projectId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this application to receive notifications about the messages sent to you with Firebase Cloud Messaging..
        /// </summary>
        public static string ConsumersFirebaseDescription {
            get {
                return ResourceManager.GetString("ConsumersFirebaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you connect Firebase Cloud Messaging you will be able to receive notifications about the messages sent to you even when you are offline..
        /// </summary>
        public static string ConsumersFirebaseInstruction {
            get {
                return ResourceManager.GetString("ConsumersFirebaseInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Google.
        /// </summary>
        public static string ConsumersGoogle {
            get {
                return ResourceManager.GetString("ConsumersGoogle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Google ID.
        /// </summary>
        public static string ConsumersgoogleClientId {
            get {
                return ResourceManager.GetString("ConsumersgoogleClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Google Key.
        /// </summary>
        public static string ConsumersgoogleClientSecret {
            get {
                return ResourceManager.GetString("ConsumersgoogleClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Google Cloud Storage.
        /// </summary>
        public static string ConsumersGoogleCloud {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bucket.
        /// </summary>
        public static string ConsumersGoogleCloudbucket {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudbucket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the name of the Google Cloud bucket where you want to store your backups..
        /// </summary>
        public static string ConsumersGoogleCloudbucketDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudbucketDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect Google Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersGoogleCloudDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add Google Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersGoogleCloudInstruction {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GoogleCloud json.
        /// </summary>
        public static string ConsumersGoogleCloudjson {
            get {
                return ResourceManager.GetString("ConsumersGoogleCloudjson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect the project to sign in to the portal using a Google account and manage Google Drive files and folders..
        /// </summary>
        public static string ConsumersGoogleDescription {
            get {
                return ResourceManager.GetString("ConsumersGoogleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add a project of the Google service you will be able to connect your Google account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it as well as connect your Google Drive account in the Documents module. This will allow to upload and create new files in Google Drive, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersGoogleInstruction {
            get {
                return ResourceManager.GetString("ConsumersGoogleInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to connect your Google Drive account to the Documents module. You’ll be able to manage, edit, and share files from Google Drive with ONLYOFFICE users. {0}Go to Google APIs console and create a new project for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersGoogleInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersGoogleInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LinkedIn.
        /// </summary>
        public static string ConsumersLinkedIn {
            get {
                return ResourceManager.GetString("ConsumersLinkedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a LinkedIn account..
        /// </summary>
        public static string ConsumersLinkedInDescription {
            get {
                return ResourceManager.GetString("ConsumersLinkedInDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the LinkedIn service you will be able to connect your LinkedIn account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it..
        /// </summary>
        public static string ConsumersLinkedInInstruction {
            get {
                return ResourceManager.GetString("ConsumersLinkedInInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to allow your users to sign in to ONLYOFFICE using their LinkedIn accounts. {0}Go to the  LinkedIn Developers website and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersLinkedInInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersLinkedInInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Linkedin ID.
        /// </summary>
        public static string ConsumersLinkedInKey {
            get {
                return ResourceManager.GetString("ConsumersLinkedInKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Linkedin Key.
        /// </summary>
        public static string ConsumersLinkedInSecret {
            get {
                return ResourceManager.GetString("ConsumersLinkedInSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mail.ru.
        /// </summary>
        public static string ConsumersMailru {
            get {
                return ResourceManager.GetString("ConsumersMailru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ID.
        /// </summary>
        public static string ConsumersMailruClientId {
            get {
                return ResourceManager.GetString("ConsumersMailruClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret key.
        /// </summary>
        public static string ConsumersMailruClientSecret {
            get {
                return ResourceManager.GetString("ConsumersMailruClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a Mail.ru account..
        /// </summary>
        public static string ConsumersMailruDescription {
            get {
                return ResourceManager.GetString("ConsumersMailruDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add the Mail.ru application you can enable signing in to the portal using the Mail.ru account on your profile page..
        /// </summary>
        public static string ConsumersMailruInstruction {
            get {
                return ResourceManager.GetString("ConsumersMailruInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rackspace Cloud Storage.
        /// </summary>
        public static string ConsumersRackspace {
            get {
                return ResourceManager.GetString("ConsumersRackspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect Rackspace Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersRackspaceDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add Rackspace Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersRackspaceInstruction {
            get {
                return ResourceManager.GetString("ConsumersRackspaceInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Private Container.
        /// </summary>
        public static string ConsumersRackspaceprivate_container {
            get {
                return ResourceManager.GetString("ConsumersRackspaceprivate_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the URL address of the Rackspace private container where you want to store your backups..
        /// </summary>
        public static string ConsumersRackspaceprivate_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceprivate_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public Container.
        /// </summary>
        public static string ConsumersRackspacepublic_container {
            get {
                return ResourceManager.GetString("ConsumersRackspacepublic_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the URL address of the Rackspace public container where you want to store your backups..
        /// </summary>
        public static string ConsumersRackspacepublic_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspacepublic_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Region.
        /// </summary>
        public static string ConsumersRackspaceregion {
            get {
                return ResourceManager.GetString("ConsumersRackspaceregion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the region where your Rackspace containers are located..
        /// </summary>
        public static string ConsumersRackspaceregionDescription {
            get {
                return ResourceManager.GetString("ConsumersRackspaceregionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amazon AWS S3.
        /// </summary>
        public static string ConsumersS3 {
            get {
                return ResourceManager.GetString("ConsumersS3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bucket.
        /// </summary>
        public static string ConsumersS3bucket {
            get {
                return ResourceManager.GetString("ConsumersS3bucket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the unique name of the Amazon bucket where you want to store your backups..
        /// </summary>
        public static string ConsumersS3bucketDescription {
            get {
                return ResourceManager.GetString("ConsumersS3bucketDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect Amazon AWS S3 to backup and store data from your portal..
        /// </summary>
        public static string ConsumersS3Description {
            get {
                return ResourceManager.GetString("ConsumersS3Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add Amazon AWS S3 to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersS3Instruction {
            get {
                return ResourceManager.GetString("ConsumersS3Instruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Region.
        /// </summary>
        public static string ConsumersS3region {
            get {
                return ResourceManager.GetString("ConsumersS3region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the AWS region where your Amazon bucket resides..
        /// </summary>
        public static string ConsumersS3regionDescription {
            get {
                return ResourceManager.GetString("ConsumersS3regionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на S3 secret access key.
        /// </summary>
        public static string Consumerssecretaccesskey {
            get {
                return ResourceManager.GetString("Consumerssecretaccesskey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selectel Cloud Storage.
        /// </summary>
        public static string ConsumersSelectel {
            get {
                return ResourceManager.GetString("ConsumersSelectel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password to access the storage.
        /// </summary>
        public static string ConsumersSelectelauthPwd {
            get {
                return ResourceManager.GetString("ConsumersSelectelauthPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auth User.
        /// </summary>
        public static string ConsumersSelectelauthUser {
            get {
                return ResourceManager.GetString("ConsumersSelectelauthUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect Selectel Cloud Storage service to backup and store data from your portal..
        /// </summary>
        public static string ConsumersSelectelDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add Selectel Cloud Storage service to your portal, you can use it to create backups of your portal making sure no data will be ever lost. Use it also to store data and static content from your portal..
        /// </summary>
        public static string ConsumersSelectelInstruction {
            get {
                return ResourceManager.GetString("ConsumersSelectelInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Private container.
        /// </summary>
        public static string ConsumersSelectelprivate_container {
            get {
                return ResourceManager.GetString("ConsumersSelectelprivate_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the name of the Selectel private container where you want to store your backups..
        /// </summary>
        public static string ConsumersSelectelprivate_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelprivate_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public container.
        /// </summary>
        public static string ConsumersSelectelpublic_container {
            get {
                return ResourceManager.GetString("ConsumersSelectelpublic_container", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the name of the Selectel public container where you want to store your backups..
        /// </summary>
        public static string ConsumersSelectelpublic_containerDescription {
            get {
                return ResourceManager.GetString("ConsumersSelectelpublic_containerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OneDrive.
        /// </summary>
        public static string ConsumersSkyDrive {
            get {
                return ResourceManager.GetString("ConsumersSkyDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application ID.
        /// </summary>
        public static string Consumersskydriveappkey {
            get {
                return ResourceManager.GetString("Consumersskydriveappkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Client secret.
        /// </summary>
        public static string Consumersskydriveappsecret {
            get {
                return ResourceManager.GetString("Consumersskydriveappsecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to manage OneDrive files and folders..
        /// </summary>
        public static string ConsumersSkyDriveDescription {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the OneDrive service you will be able to connect your OneDrive account in the Documents module. This will allow to upload and create new files in OneDrive, edit existing ones, copy and delete them, share files and folders with ONLYOFFICE™ portal users..
        /// </summary>
        public static string ConsumersSkyDriveInstruction {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to connect your OneDrive account to the Documents module. You’ll be able to manage, edit, and share files from OneDrive with ONLYOFFICE users. {0}Sign in to your Microsoft Azure account and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersSkyDriveInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersSkyDriveInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SMS Center.
        /// </summary>
        public static string ConsumersSmsc {
            get {
                return ResourceManager.GetString("ConsumersSmsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application for the two-factor authentication via SMS Center..
        /// </summary>
        public static string ConsumersSmscDescription {
            get {
                return ResourceManager.GetString("ConsumersSmscDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adding the SMS Center service application you will be able to enable the two-factor authentication and receive an SMS with a code allowing the user to enter ONLYOFFICE portal. SMS Center application is useful as a provider for CIS countries..
        /// </summary>
        public static string ConsumersSmscInstruction {
            get {
                return ResourceManager.GetString("ConsumersSmscInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use this app to enable two-factor authentication with SMS Center service. {0}Insert your smsc account login and your password (or password MD5 hash) in lower case:.
        /// </summary>
        public static string ConsumersSmscInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersSmscInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Login.
        /// </summary>
        public static string Consumerssmsclogin {
            get {
                return ResourceManager.GetString("Consumerssmsclogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password or password MD5 hash in lowercase.
        /// </summary>
        public static string Consumerssmscpsw {
            get {
                return ResourceManager.GetString("Consumerssmscpsw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Twilio.
        /// </summary>
        public static string ConsumersTwilio {
            get {
                return ResourceManager.GetString("ConsumersTwilio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Account Sid.
        /// </summary>
        public static string ConsumerstwilioAccountSid {
            get {
                return ResourceManager.GetString("ConsumerstwilioAccountSid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auth Token.
        /// </summary>
        public static string ConsumerstwilioAuthToken {
            get {
                return ResourceManager.GetString("ConsumerstwilioAuthToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this application to call CRM contacts with Twilio..
        /// </summary>
        public static string ConsumersTwilioDescription {
            get {
                return ResourceManager.GetString("ConsumersTwilioDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на After you add Twilio, you will be able to call any CRM contact right from the browser..
        /// </summary>
        public static string ConsumersTwilioInstruction {
            get {
                return ResourceManager.GetString("ConsumersTwilioInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to allow your users to call their contacts from the CRM module using Twilio. {0}Go to Twilio Console and paste the following data below:.
        /// </summary>
        public static string ConsumersTwilioInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersTwilioInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phone number from Twilio (required for SMS authorization).
        /// </summary>
        public static string Consumerstwiliosender {
            get {
                return ResourceManager.GetString("Consumerstwiliosender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Twitter.
        /// </summary>
        public static string ConsumersTwitter {
            get {
                return ResourceManager.GetString("ConsumersTwitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Access Token.
        /// </summary>
        public static string ConsumerstwitterAccessToken_Default {
            get {
                return ResourceManager.GetString("ConsumerstwitterAccessToken_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Access Token Secret.
        /// </summary>
        public static string ConsumerstwitterAccessTokenSecret_Default {
            get {
                return ResourceManager.GetString("ConsumerstwitterAccessTokenSecret_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a Twitter account and search for contacts..
        /// </summary>
        public static string ConsumersTwitterDescription {
            get {
                return ResourceManager.GetString("ConsumersTwitterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you add an application of the Twitter service you will be able to connect your Twitter account on your profile page so that you can sign in to the ONLYOFFICE™ portal using it. You will also be able to find a Twitter account of a person in the CRM module and link it on the &apos;Edit person/company&apos; page and then view Twitter news feed..
        /// </summary>
        public static string ConsumersTwitterInstruction {
            get {
                return ResourceManager.GetString("ConsumersTwitterInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to allow your users to sign in to ONLYOFFICE using their Twitter and link their customers’ Twitter accounts to the CRM module. {0}Go to Twitter Developers Portal and create a new app ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersTwitterInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersTwitterInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Twitter ID.
        /// </summary>
        public static string ConsumersTwitterKey {
            get {
                return ResourceManager.GetString("ConsumersTwitterKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Twitter Key.
        /// </summary>
        public static string ConsumersTwitterSecret {
            get {
                return ResourceManager.GetString("ConsumersTwitterSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rackspace username.
        /// </summary>
        public static string Consumersusername {
            get {
                return ResourceManager.GetString("Consumersusername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VK.
        /// </summary>
        public static string ConsumersVk {
            get {
                return ResourceManager.GetString("ConsumersVk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application ID.
        /// </summary>
        public static string ConsumersVkClientId {
            get {
                return ResourceManager.GetString("ConsumersVkClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secure key.
        /// </summary>
        public static string ConsumersVkClientSecret {
            get {
                return ResourceManager.GetString("ConsumersVkClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a VK account..
        /// </summary>
        public static string ConsumersVkDescription {
            get {
                return ResourceManager.GetString("ConsumersVkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add the VK application you can enable signing in to the portal using the VK account on your profile page..
        /// </summary>
        public static string ConsumersVkInstruction {
            get {
                return ResourceManager.GetString("ConsumersVkInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WordPress.
        /// </summary>
        public static string ConsumersWordpress {
            get {
                return ResourceManager.GetString("ConsumersWordpress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to publish documents directly in WordPress..
        /// </summary>
        public static string ConsumersWordpressDescription {
            get {
                return ResourceManager.GetString("ConsumersWordpressDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adding the WordPress application you can easily publish the documents on your WordPress website, saving their formatting..
        /// </summary>
        public static string ConsumersWordpressInstruction {
            get {
                return ResourceManager.GetString("ConsumersWordpressInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WordPress Key.
        /// </summary>
        public static string ConsumerswpClientId {
            get {
                return ResourceManager.GetString("ConsumerswpClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WordPress Secret.
        /// </summary>
        public static string ConsumerswpClientSecret {
            get {
                return ResourceManager.GetString("ConsumerswpClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yahoo.
        /// </summary>
        public static string ConsumersYahoo {
            get {
                return ResourceManager.GetString("ConsumersYahoo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Client ID.
        /// </summary>
        public static string ConsumersyahooClientId {
            get {
                return ResourceManager.GetString("ConsumersyahooClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Client Secret.
        /// </summary>
        public static string ConsumersyahooClientSecret {
            get {
                return ResourceManager.GetString("ConsumersyahooClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to import users from the Yahoo service..
        /// </summary>
        public static string ConsumersYahooDescription {
            get {
                return ResourceManager.GetString("ConsumersYahooDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adding the Yahoo service application you will be able to add ONLYOFFICE portal new users from the contact list..
        /// </summary>
        public static string ConsumersYahooInstruction {
            get {
                return ResourceManager.GetString("ConsumersYahooInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable this app to add new portal users from your Yahoo contact list. {0}Go to the Create Application page in the Yahoo Developer Network and create a new app for ONLYOFFICE integration. Insert the data you received below:.
        /// </summary>
        public static string ConsumersYahooInstructionV11 {
            get {
                return ResourceManager.GetString("ConsumersYahooInstructionV11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yandex.
        /// </summary>
        public static string ConsumersYandex {
            get {
                return ResourceManager.GetString("ConsumersYandex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ID.
        /// </summary>
        public static string ConsumersYandexClientId {
            get {
                return ResourceManager.GetString("ConsumersYandexClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        public static string ConsumersYandexClientSecret {
            get {
                return ResourceManager.GetString("ConsumersYandexClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable the application to sign in to the portal using a Yandex account..
        /// </summary>
        public static string ConsumersYandexDescription {
            get {
                return ResourceManager.GetString("ConsumersYandexDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you add the Yandex application you can enable signing in to the portal using the Yandex account on your profile page..
        /// </summary>
        public static string ConsumersYandexInstruction {
            get {
                return ResourceManager.GetString("ConsumersYandexInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password recovery operation is prohibited for an LDAP user.
        /// </summary>
        public static string CouldNotRecoverPasswordForLdapUser {
            get {
                return ResourceManager.GetString("CouldNotRecoverPasswordForLdapUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password recovery operation is prohibited for an SSO user.
        /// </summary>
        public static string CouldNotRecoverPasswordForSsoUser {
            get {
                return ResourceManager.GetString("CouldNotRecoverPasswordForSsoUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom.
        /// </summary>
        public static string CustomNamingPeopleSchema {
            get {
                return ResourceManager.GetString("CustomNamingPeopleSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect Instance id..
        /// </summary>
        public static string EmailAndPasswordIncorrectAmiId {
            get {
                return ResourceManager.GetString("EmailAndPasswordIncorrectAmiId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect email address.
        /// </summary>
        public static string EmailAndPasswordIncorrectEmail {
            get {
                return ResourceManager.GetString("EmailAndPasswordIncorrectEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect promo code.
        /// </summary>
        public static string EmailAndPasswordIncorrectPromocode {
            get {
                return ResourceManager.GetString("EmailAndPasswordIncorrectPromocode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No permissions to perform this action.
        /// </summary>
        public static string ErrorAccessDenied {
            get {
                return ResourceManager.GetString("ErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The access to the portal is restricted..
        /// </summary>
        public static string ErrorAccessRestricted {
            get {
                return ResourceManager.GetString("ErrorAccessRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad keys.
        /// </summary>
        public static string ErrorBadKeys {
            get {
                return ResourceManager.GetString("ErrorBadKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your profile is suspended.
        /// </summary>
        public static string ErrorDisabledProfile {
            get {
                return ResourceManager.GetString("ErrorDisabledProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {!User} with this email is already registered.
        /// </summary>
        public static string ErrorEmailAlreadyExists {
            get {
                return ResourceManager.GetString("ErrorEmailAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Emails from this domain are not allowed for registration.
        /// </summary>
        public static string ErrorEmailDomainNotAllowed {
            get {
                return ResourceManager.GetString("ErrorEmailDomainNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Email field is empty.
        /// </summary>
        public static string ErrorEmailEmpty {
            get {
                return ResourceManager.GetString("ErrorEmailEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The current email and the new email are the same.
        /// </summary>
        public static string ErrorEmailsAreTheSame {
            get {
                return ResourceManager.GetString("ErrorEmailsAreTheSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please fill in all fields.
        /// </summary>
        public static string ErrorEmptyFields {
            get {
                return ResourceManager.GetString("ErrorEmptyFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message text is empty.
        /// </summary>
        public static string ErrorEmptyMessage {
            get {
                return ResourceManager.GetString("ErrorEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The uploaded file could not be found.
        /// </summary>
        public static string ErrorEmptyUploadFileSelected {
            get {
                return ResourceManager.GetString("ErrorEmptyUploadFileSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image file size is too large.
        /// </summary>
        public static string ErrorImageWeightLimit {
            get {
                return ResourceManager.GetString("ErrorImageWeightLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect firstname or lastname.
        /// </summary>
        public static string ErrorIncorrectUserName {
            get {
                return ResourceManager.GetString("ErrorIncorrectUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your pricing plan does not support this option.
        /// </summary>
        public static string ErrorNotAllowedOption {
            get {
                return ResourceManager.GetString("ErrorNotAllowedOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect email.
        /// </summary>
        public static string ErrorNotCorrectEmail {
            get {
                return ResourceManager.GetString("ErrorNotCorrectEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid domain name.
        /// </summary>
        public static string ErrorNotCorrectTrustedDomain {
            get {
                return ResourceManager.GetString("ErrorNotCorrectTrustedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The password is empty..
        /// </summary>
        public static string ErrorPasswordEmpty {
            get {
                return ResourceManager.GetString("ErrorPasswordEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на from {0} to {1} characters.
        /// </summary>
        public static string ErrorPasswordLength {
            get {
                return ResourceManager.GetString("ErrorPasswordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password must contain.
        /// </summary>
        public static string ErrorPasswordMessage {
            get {
                return ResourceManager.GetString("ErrorPasswordMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The password must contain.
        /// </summary>
        public static string ErrorPasswordMessageStart {
            get {
                return ResourceManager.GetString("ErrorPasswordMessageStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на digits.
        /// </summary>
        public static string ErrorPasswordNoDigits {
            get {
                return ResourceManager.GetString("ErrorPasswordNoDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на special characters.
        /// </summary>
        public static string ErrorPasswordNoSpecialSymbols {
            get {
                return ResourceManager.GetString("ErrorPasswordNoSpecialSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на capital letters.
        /// </summary>
        public static string ErrorPasswordNoUpperCase {
            get {
                return ResourceManager.GetString("ErrorPasswordNoUpperCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Request limit is exceeded.
        /// </summary>
        public static string ErrorRequestLimitExceeded {
            get {
                return ResourceManager.GetString("ErrorRequestLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The user could not be found.
        /// </summary>
        public static string ErrorUserNotFound {
            get {
                return ResourceManager.GetString("ErrorUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The user with &quot;{0}&quot; email could not be found.
        /// </summary>
        public static string ErrorUserNotFoundByEmail {
            get {
                return ResourceManager.GetString("ErrorUserNotFoundByEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EU (Ireland) Region.
        /// </summary>
        public static string EuServerRegion {
            get {
                return ResourceManager.GetString("EuServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximum file size is exceeded.
        /// </summary>
        public static string FileSizeMaxExceed {
            get {
                return ResourceManager.GetString("FileSizeMaxExceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Note: the file size cannot exceed {1}{0}{2}.
        /// </summary>
        public static string FileSizeNote {
            get {
                return ResourceManager.GetString("FileSizeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на bytes,KB,MB,GB,TB.
        /// </summary>
        public static string FileSizePostfix {
            get {
                return ResourceManager.GetString("FileSizePostfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The link to confirm your account has been sent to the specified email.
        /// </summary>
        public static string FinishInviteJoinEmailMessage {
            get {
                return ResourceManager.GetString("FinishInviteJoinEmailMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The server could not save settings..
        /// </summary>
        public static string LdapSettingsErrorCantSaveLdapSettings {
            get {
                return ResourceManager.GetString("LdapSettingsErrorCantSaveLdapSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Too many LDAP operations..
        /// </summary>
        public static string LdapSettingsTooManyOperations {
            get {
                return ResourceManager.GetString("LdapSettingsTooManyOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на License is not correct.
        /// </summary>
        public static string LicenseError {
            get {
                return ResourceManager.GetString("LicenseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The license is not valid for this portal version..
        /// </summary>
        public static string LicenseErrorExpired {
            get {
                return ResourceManager.GetString("LicenseErrorExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The number of portals exceeds the one allowed by the license.
        /// </summary>
        public static string LicenseErrorPortal {
            get {
                return ResourceManager.GetString("LicenseErrorPortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The number of users exceeds the one allowed by the license.
        /// </summary>
        public static string LicenseErrorQuota {
            get {
                return ResourceManager.GetString("LicenseErrorQuota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uploaded successfully.
        /// </summary>
        public static string LicenseUploaded {
            get {
                return ResourceManager.GetString("LicenseUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uploaded successfully. {0}Support and updates are not available for this license since {2}.{1}.
        /// </summary>
        public static string LicenseUploadedOverdue {
            get {
                return ResourceManager.GetString("LicenseUploadedOverdue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uploaded successfully. {0}Support are not available for this license since {2}.{1}.
        /// </summary>
        public static string LicenseUploadedOverdueSupport {
            get {
                return ResourceManager.GetString("LicenseUploadedOverdueSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The email change instructions have been successfuly sent.
        /// </summary>
        public static string MessageEmailChangeInstuctionsSentOnEmail {
            get {
                return ResourceManager.GetString("MessageEmailChangeInstuctionsSentOnEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If a user with the {0} email exists, the password change instruction has been sent to this email address..
        /// </summary>
        public static string MessageYourPasswordSendedToEmail {
            get {
                return ResourceManager.GetString("MessageYourPasswordSendedToEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To change the number, you need to delete your current phone number.
        /// </summary>
        public static string MobilePhoneMustErase {
            get {
                return ResourceManager.GetString("MobilePhoneMustErase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ORG Region.
        /// </summary>
        public static string OrgServerRegion {
            get {
                return ResourceManager.GetString("OrgServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Owner.
        /// </summary>
        public static string Owner {
            get {
                return ResourceManager.GetString("Owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disk space quota exceeded.
        /// </summary>
        public static string PersonalFreeSpaceException {
            get {
                return ResourceManager.GetString("PersonalFreeSpaceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Portal Access.
        /// </summary>
        public static string PortalSecurity {
            get {
                return ResourceManager.GetString("PortalSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data reassign process for {0} is not complete..
        /// </summary>
        public static string ReassignDataRemoveUserError {
            get {
                return ResourceManager.GetString("ReassignDataRemoveUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Recaptcha.
        /// </summary>
        public static string RecaptchaInvalid {
            get {
                return ResourceManager.GetString("RecaptchaInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Asia Pacific (Singapore).
        /// </summary>
        public static string SgServerRegion {
            get {
                return ResourceManager.GetString("SgServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect code.
        /// </summary>
        public static string SmsAuthenticationMessageError {
            get {
                return ResourceManager.GetString("SmsAuthenticationMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Code: {0}.
        /// </summary>
        public static string SmsAuthenticationMessageToUser {
            get {
                return ResourceManager.GetString("SmsAuthenticationMessageToUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time to use the code has expired. Please request a new text message..
        /// </summary>
        public static string SmsAuthenticationTimeout {
            get {
                return ResourceManager.GetString("SmsAuthenticationTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SMS settings are not available.
        /// </summary>
        public static string SmsNotAvailable {
            get {
                return ResourceManager.GetString("SmsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have sent too many text messages. Please try again later..
        /// </summary>
        public static string SmsTooMuchError {
            get {
                return ResourceManager.GetString("SmsTooMuchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not save settings.
        /// </summary>
        public static string SsoSettingsCantSaveSettings {
            get {
                return ResourceManager.GetString("SsoSettingsCantSaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings could not be null.
        /// </summary>
        public static string SsoSettingsCouldNotBeNull {
            get {
                return ResourceManager.GetString("SsoSettingsCouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid binding: {0}.
        /// </summary>
        public static string SsoSettingsInvalidBinding {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid entityID.
        /// </summary>
        public static string SsoSettingsInvalidEntityId {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidEntityId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid fields mapping.
        /// </summary>
        public static string SsoSettingsInvalidMapping {
            get {
                return ResourceManager.GetString("SsoSettingsInvalidMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Welcome Page settings have been successfully saved.
        /// </summary>
        public static string SuccessfullySaveGreetingSettingsMessage {
            get {
                return ResourceManager.GetString("SuccessfullySaveGreetingSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings have been successfully updated.
        /// </summary>
        public static string SuccessfullySaveSettingsMessage {
            get {
                return ResourceManager.GetString("SuccessfullySaveSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Instructions to delete your profile has been sent to {0} email address.
        /// </summary>
        public static string SuccessfullySentNotificationDeleteUserInfoMessage {
            get {
                return ResourceManager.GetString("SuccessfullySentNotificationDeleteUserInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect code.
        /// </summary>
        public static string TfaAppAuthMessageError {
            get {
                return ResourceManager.GetString("TfaAppAuthMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TFA application settings are not available.
        /// </summary>
        public static string TfaAppNotAvailable {
            get {
                return ResourceManager.GetString("TfaAppNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have sent too many text messages. Please try again later..
        /// </summary>
        public static string TfaTooMuchError {
            get {
                return ResourceManager.GetString("TfaTooMuchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на US West (Oregon) Region.
        /// </summary>
        public static string UsServerRegion {
            get {
                return ResourceManager.GetString("UsServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на What&apos;s New.
        /// </summary>
        public static string WhatsNewSubscriptionName {
            get {
                return ResourceManager.GetString("WhatsNewSubscriptionName", resourceCulture);
            }
        }
    }
}
