x-service: &x-service-base
  env_file: "./.env"
  environment:
    MYSQL_CONTAINER_NAME: ${MYSQL_CONTAINER_NAME}
    MYSQL_HOST: ${MYSQL_HOST}
    MYSQL_PORT: ${MYSQL_PORT}
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    MYSQL_DATABASE: ${MYSQL_DATABASE}
    MYSQL_USER: ${MYSQL_USER}
    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    DATABASE_MIGRATION: ${DATABASE_MIGRATION}
    APP_DOTNET_ENV: ${APP_DOTNET_ENV}
    APP_KNOWN_NETWORKS: ${APP_KNOWN_NETWORKS}
    APP_KNOWN_PROXIES: ${APP_KNOWN_PROXIES}
    APP_CORE_BASE_DOMAIN: ${APP_CORE_BASE_DOMAIN}
    APP_CORE_MACHINEKEY: ${APP_CORE_MACHINEKEY}
    APP_URL_PORTAL: ${APP_URL_PORTAL}
    INSTALLATION_TYPE: ${INSTALLATION_TYPE}
    OAUTH_REDIRECT_URL: ${OAUTH_REDIRECT_URL}
    DOCUMENT_SERVER_JWT_SECRET: ${DOCUMENT_SERVER_JWT_SECRET}
    DOCUMENT_SERVER_JWT_HEADER: ${DOCUMENT_SERVER_JWT_HEADER}
    DOCUMENT_SERVER_URL_PUBLIC: ${DOCUMENT_SERVER_URL_PUBLIC}
    DOCUMENT_CONTAINER_NAME: ${DOCUMENT_CONTAINER_NAME}
    DOCUMENT_SERVER_URL_EXTERNAL: ${DOCUMENT_SERVER_URL_EXTERNAL}
    ELK_CONTAINER_NAME: ${ELK_CONTAINER_NAME}
    ELK_SHEME: ${ELK_SHEME}
    ELK_HOST: ${ELK_HOST}
    ELK_PORT: ${ELK_PORT}
    REDIS_CONTAINER_NAME: ${REDIS_CONTAINER_NAME}
    REDIS_HOST: ${REDIS_HOST}
    REDIS_PORT: ${REDIS_PORT}
    REDIS_USER_NAME: ${REDIS_USER_NAME}
    REDIS_PASSWORD: ${REDIS_PASSWORD}
    REDIS_DB: ${REDIS_DB}
    RABBIT_CONTAINER_NAME: ${RABBIT_CONTAINER_NAME}
    RABBIT_PROTOCOL: ${RABBIT_PROTOCOL}
    RABBIT_HOST: ${RABBIT_HOST}
    RABBIT_PORT: ${RABBIT_PORT}
    RABBIT_VIRTUAL_HOST: ${RABBIT_VIRTUAL_HOST}
    RABBIT_USER_NAME: ${RABBIT_USER_NAME}
    RABBIT_PASSWORD: ${RABBIT_PASSWORD}
    LOG_LEVEL: ${LOG_LEVEL}
    DEBUG_INFO: ${DEBUG_INFO}
    CERTIFICATE_PATH: ${CERTIFICATE_PATH}
    NODE_OPTIONS: ${NODE_OPTIONS}
    WRONG_PORTAL_NAME_URL: ${WRONG_PORTAL_NAME_URL}
    DASHBOARDS_CONTAINER_NAME: ${DASHBOARDS_CONTAINER_NAME}
    DASHBOARDS_USERNAME: ${DASHBOARDS_USERNAME}
    DASHBOARDS_PASSWORD: ${DASHBOARDS_PASSWORD}
  volumes:
    - ${VOLUMES_DIR:+${VOLUMES_DIR}/}app_data:/app/onlyoffice/data
    - ${VOLUMES_DIR:+${VOLUMES_DIR}/}log_data:/var/log/onlyoffice
    - ./config/nginx/onlyoffice-proxy-dev.conf:/etc/nginx/includes/onlyoffice-proxy-dev.conf:ro
x-service-network: &x-service-network
  networks:
    - dev-onlyoffice

services:
  onlyoffice-docspace-services:
    <<: [*x-service-base, *x-service-network]
    restart: always
    ports:
      - 80:80
      - 33060:3306
    cap_add:
      - SYS_NICE
    tty: true
    user: root
    build:
      context: ..
      dockerfile: ./docker/dev.Dockerfile
      target: build
    container_name: onlyoffice-docspace-services
    image: "${REGISTRY}${REPO}/${DOCKER_IMAGE_PREFIX}docspace-services:${DOCKER_TAG}"

  onlyoffice-document-server:
    <<: [*x-service-network]
    image: "${REGISTRY}${DOCUMENT_SERVER_IMAGE_NAME}"
    container_name: ${DOCUMENT_CONTAINER_NAME}
    # Strings below enable the JSON Web Token validation.
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=${DOCUMENT_SERVER_JWT_SECRET}
      - JWT_HEADER=${DOCUMENT_SERVER_JWT_HEADER}
      - JWT_IN_BODY=true
    volumes:
      - ${VOLUMES_DIR:+${VOLUMES_DIR}/}app_data:/var/www/onlyoffice/Data
      - ${VOLUMES_DIR:+${VOLUMES_DIR}/}log_data:/var/log/onlyoffice
    expose:
      - '80'
    stdin_open: true
    restart: always
    stop_grace_period: 60s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/info/info.json"]
      interval: 30s
      retries: 5
      start_period: 60s
      timeout: 10s      

networks:
  dev-onlyoffice:
    name: dev-onlyoffice
    driver: "bridge"

volumes:
  log_data:
  app_data:
  os_data:
