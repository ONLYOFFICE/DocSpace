// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ASC.Mail.Core.Dao.Entities
{
    [Table("mail_mailbox_server")]
    public partial class MailMailboxServer
    {
        [Key]
        [Column("id", TypeName = "int(11)")]
        public int Id { get; set; }
        [Column("id_provider", TypeName = "int(11)")]
        public int IdProvider { get; set; }
        [Required]
        [Column("type", TypeName = "enum('pop3','imap','smtp')")]
        public string Type { get; set; }
        [Required]
        [Column("hostname", TypeName = "varchar(255)")]
        public string Hostname { get; set; }
        [Column("port", TypeName = "int(11)")]
        public int Port { get; set; }
        [Required]
        [Column("socket_type", TypeName = "enum('plain','SSL','STARTTLS')")]
        public string SocketType { get; set; }
        [Column("username", TypeName = "varchar(255)")]
        public string Username { get; set; }
        [Column("authentication", TypeName = "varchar(255)")]
        public string Authentication { get; set; }
        [Column("is_user_data", TypeName = "tinyint(4)")]
        public bool IsUserData { get; set; }
    }

    public static class MailMailboxServerExtension
    {
        public static ModelBuilder AddMailMailboxServer(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailMailboxServer>(entity =>
            {
                entity.HasIndex(e => e.IdProvider)
                    .HasDatabaseName("id_provider");

                entity.Property(e => e.Authentication)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Hostname)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.SocketType)
                    .HasDefaultValueSql("'plain'")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");
            });

            return modelBuilder;
        }
    }
}