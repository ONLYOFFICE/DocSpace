// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ASC.Core.Common.EF;
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ASC.Mail.Core.Dao.Entities
{
    [Table("mail_chain")]
    public partial class MailChain : BaseEntity
    {
        [Key]
        [Column("id", TypeName = "varchar(255)")]
        public string Id { get; set; }
        [Key]
        [Column("id_mailbox", TypeName = "int(10) unsigned")]
        public int IdMailbox { get; set; }
        [Key]
        [Column("tenant", TypeName = "int(10) unsigned")]
        public int Tenant { get; set; }
        [Key]
        [Column("id_user", TypeName = "varchar(255)")]
        public string IdUser { get; set; }
        [Key]
        [Column("folder", TypeName = "int(10) unsigned")]
        public int Folder { get; set; }
        [Column("length", TypeName = "int(10) unsigned")]
        public int Length { get; set; }
        [Column("unread", TypeName = "tinyint(1) unsigned")]
        public bool Unread { get; set; }
        [Column("has_attachments", TypeName = "tinyint(1) unsigned")]
        public bool HasAttachments { get; set; }
        [Column("importance", TypeName = "tinyint(1) unsigned")]
        public bool Importance { get; set; }
        [Required]
        [Column("tags", TypeName = "text")]
        public string Tags { get; set; }
        [Column("is_crm_chain", TypeName = "tinyint(4)")]
        public sbyte IsCrmChain { get; set; }

        public override object[] GetKeys()
        {
            return new object[] { Tenant, IdUser, Id, IdMailbox, Folder };
        }
    }

    public static class MailChainExtension
    {
        public static ModelBuilder AddMailChain(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailChain>(entity =>
            {
                entity.HasKey(e => new { e.Tenant, e.IdUser, e.Id, e.IdMailbox, e.Folder })
                    .HasName("PRIMARY");

                entity.Property(e => e.IdUser)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Tags)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");
            });

            return modelBuilder;
        }
    }
}