// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ASC.Core.Common.EF;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ASC.Mail.Core.Dao.Entities
{
    [Table("mail_server_address")]
    public partial class MailServerAddress : BaseEntity
    {
        [Key]
        [Column("id", TypeName = "int(11)")]
        public int Id { get; set; }
        [Column("tenant", TypeName = "int(11)")]
        public int Tenant { get; set; }
        [Required]
        [Column("name", TypeName = "varchar(64)")]
        public string Name { get; set; }
        [Column("id_domain", TypeName = "int(11)")]
        public int IdDomain { get; set; }
        [Column("id_mailbox", TypeName = "int(11)")]
        public int IdMailbox { get; set; }
        [Column("is_mail_group", TypeName = "int(10)")]
        public bool IsMailGroup { get; set; }
        [Column("is_alias", TypeName = "int(10)")]
        public bool IsAlias { get; set; }
        [Column("date_created", TypeName = "datetime")]
        public DateTime DateCreated { get; set; }

        public override object[] GetKeys()
        {
            return new object[] { Id };
        }
    }

    public static class MailServerAddressExtension
    {
        public static ModelBuilder AddMailServerAddress(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailServerAddress>(entity =>
            {
                entity.HasIndex(e => e.IdDomain)
                    .HasDatabaseName("domain_index");

                entity.HasIndex(e => e.IdMailbox)
                    .HasDatabaseName("id_mailbox_fk_index");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");
            });

            return modelBuilder;
        }
    }
}