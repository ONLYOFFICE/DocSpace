// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ASC.Core.Common.EF;
using Microsoft.EntityFrameworkCore;
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ASC.Mail.Core.Dao.Entities
{
    [Table("mail_server_dns")]
    public partial class MailServerDns : BaseEntity
    {
        [Key]
        [Column("id", TypeName = "int(11) unsigned")]
        public uint Id { get; set; }
        [Column("tenant", TypeName = "int(11)")]
        public int Tenant { get; set; }
        [Required]
        [Column("id_user", TypeName = "varchar(255)")]
        public string IdUser { get; set; }
        [Column("id_domain", TypeName = "int(11)")]
        public int IdDomain { get; set; }
        [Required]
        [Column("dkim_selector", TypeName = "varchar(63)")]
        public string DkimSelector { get; set; }
        [Column("dkim_private_key", TypeName = "text")]
        public string DkimPrivateKey { get; set; }
        [Column("dkim_public_key", TypeName = "text")]
        public string DkimPublicKey { get; set; }
        [Column("dkim_ttl", TypeName = "int(11)")]
        public int DkimTtl { get; set; }
        [Column("dkim_verified")]
        public bool DkimVerified { get; set; }
        [Column("dkim_date_checked", TypeName = "datetime")]
        public DateTime? DkimDateChecked { get; set; }
        [Column("domain_check", TypeName = "text")]
        public string DomainCheck { get; set; }
        [Column("spf", TypeName = "text")]
        public string Spf { get; set; }
        [Column("spf_ttl", TypeName = "int(11)")]
        public int SpfTtl { get; set; }
        [Column("spf_verified")]
        public bool SpfVerified { get; set; }
        [Column("spf_date_checked", TypeName = "datetime")]
        public DateTime? SpfDateChecked { get; set; }
        [Column("mx", TypeName = "varchar(255)")]
        public string Mx { get; set; }
        [Column("mx_ttl", TypeName = "int(11)")]
        public int MxTtl { get; set; }
        [Column("mx_verified")]
        public bool MxVerified { get; set; }
        [Column("mx_date_checked", TypeName = "datetime")]
        public DateTime? MxDateChecked { get; set; }
        [Column("time_modified", TypeName = "timestamp")]
        public DateTime TimeModified { get; set; }

        public override object[] GetKeys()
        {
            return new object[] { Id };
        }
    }

    public static class MailServerDnsExtension
    {
        public static ModelBuilder AddMailServerDns(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailServerDns>(entity =>
            {
                entity.HasIndex(e => new { e.IdDomain, e.Tenant, e.IdUser })
                    .HasDatabaseName("id_domain_tenant_id_user");

                entity.Property(e => e.DkimPrivateKey)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.DkimPublicKey)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.DkimSelector)
                    .HasDefaultValueSql("'dkim'")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.DkimTtl).HasDefaultValueSql("'300'");

                entity.Property(e => e.DomainCheck)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.IdDomain).HasDefaultValueSql("'-1'");

                entity.Property(e => e.IdUser)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Mx)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.MxTtl).HasDefaultValueSql("'300'");

                entity.Property(e => e.Spf)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.SpfTtl).HasDefaultValueSql("'300'");

                entity.Property(e => e.TimeModified)
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .ValueGeneratedOnAddOrUpdate();
            });

            return modelBuilder;
        }
    }
}