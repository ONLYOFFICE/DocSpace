// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ASC.Mail.Core.Dao.Entities
{
    [Table("mail_attachment")]
    public partial class MailAttachment
    {
        [Key]
        [Column("id", TypeName = "int(11)")]
        public int Id { get; set; }
        [Column("id_mail", TypeName = "int(11)")]
        public int IdMail { get; set; }
        [Required]
        [Column("name", TypeName = "varchar(255)")]
        public string Name { get; set; }
        [Column("stored_name", TypeName = "varchar(255)")]
        public string StoredName { get; set; }
        [Column("type", TypeName = "varchar(255)")]
        public string Type { get; set; }
        [Column("size", TypeName = "bigint(20)")]
        public long Size { get; set; }
        [Column("need_remove", TypeName = "int(11)")]
        public bool NeedRemove { get; set; }
        [Column("file_number", TypeName = "int(11)")]
        public int FileNumber { get; set; }
        [Column("content_id", TypeName = "varchar(255)")]
        public string ContentId { get; set; }
        [Column("tenant", TypeName = "int(11)")]
        public int Tenant { get; set; }
        [Column("id_mailbox", TypeName = "int(11)")]
        public int IdMailbox { get; set; }

        public MailMail Mail { get; set; }
    }

    public static class MailAttachmentExtension
    {
        public static ModelBuilder AddMailAttachment(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailAttachment>(entity =>
            {
                entity.HasIndex(e => new { e.IdMail, e.ContentId })
                    .HasDatabaseName("id_mail");

                entity.HasIndex(e => new { e.IdMailbox, e.Tenant })
                    .HasDatabaseName("id_mailbox");

                entity.HasIndex(e => new { e.Tenant, e.IdMail })
                    .HasDatabaseName("tenant");

                entity.Property(e => e.ContentId)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.StoredName)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.HasOne(a => a.Mail)
                    .WithMany(m => m.Attachments)
                    .HasForeignKey(a => a.IdMail);

            });

            return modelBuilder;
        }
    }
}