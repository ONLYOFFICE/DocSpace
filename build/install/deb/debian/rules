#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1
export DH_OPTIONS=-v

%:
	dh $@ --with=systemd

PRODUCT={{product}}
CURRENT_PATH=${CURDIR}
SRC_PATH=$(shell cd ../../../; pwd)
SCRIPT_PATH=build/install/common

override_dh_auto_clean:
	@echo "RULES.$@"
	dh_testdir 
	rm -rf ${CURRENT_PATH}/debian/*.service
	rm -rf ${SRC_PATH}/build/install/${PRODUCT}*

override_dh_auto_configure:
	@echo "RULES.$@"
	dh_testdir 
	dh_auto_configure

override_dh_auto_build:
	cd ${SRC_PATH}/${SCRIPT_PATH}/systemd; \
	bash build.sh -bp "${CURRENT_PATH}/debian/"; \
	cd ${SRC_PATH}/${SCRIPT_PATH}; \
	bash build-frontend.sh -sp ${SRC_PATH}; \
	bash build-backend.sh -sp ${SRC_PATH}; \
	bash publish-backend.sh -sp ${SRC_PATH}

	rm ${SRC_PATH}/config/nginx/onlyoffice-login.conf
	sed -i "s@var/www@var/www/${PRODUCT}@g" ${SRC_PATH}/config/nginx/*.conf 
	sed -i "s@var/www@var/www/${PRODUCT}@g" ${SRC_PATH}/config/nginx/includes/*.conf

	json -I -f ${SRC_PATH}/config/appsettings.services.json -e "this.logPath=\"/var/log/onlyoffice/${PRODUCT}\"" -e "this.socket={ 'path': '../ASC.Socket.IO/' }" \
	-e "this.ssoauth={ 'path': '../ASC.SsoAuth/' }" -e "this.core={ 'products': { 'folder': '/var/www/${PRODUCT}/products', 'subfolder': 'server'} }"
	
override_dh_fixperms:
	dh_fixperms

override_dh_auto_install:
	dh_installinit --no-start
	dh_systemd_enable --no-enable
	dh_systemd_start --no-start

override_dh_strip:
#	dh_strip --exclude=/site-packages/

override_dh_shlibdeps:
#	dh_shlibdeps --exclude=/site-packages/
