version: "3.8"

services:
  onlyoffice-backup-background-tasks:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: backup_background
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-backup-background:${DOCKER_TAG}"

  onlyoffice-clear-events:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: clear-events
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-clear-events:${DOCKER_TAG}"

  # onlyoffice-migration:
  #   build:
  #     context: ./
  #     dockerfile: "${DOCKERFILE}"
  #     target: migration
  #   image: "${REPO}/${DOCKER_IMAGE_PREFIX}-migration:${DOCKER_TAG}"

  onlyoffice-backup:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: backup
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-backup:${DOCKER_TAG}"

  onlyoffice-files:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: files
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-files:${DOCKER_TAG}"

  onlyoffice-files-services:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: files_services
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-files-services:${DOCKER_TAG}"

  # onlyoffice-notify:
  #  build:
  #    context: ./
  #    dockerfile: "${DOCKERFILE}"
  #    target: notify
  #  image: "${REPO}/${DOCKER_IMAGE_PREFIX}-notify:${DOCKER_TAG}"

  onlyoffice-people-server:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: people_server
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-people-server:${DOCKER_TAG}"

  onlyoffice-socket:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: socket
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-socket:${DOCKER_TAG}"

  onlyoffice-studio-notify:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: studio_notify
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-studio-notify:${DOCKER_TAG}"

  # onlyoffice-telegram-service:
  #   build:
  #     context: ./
  #     dockerfile: "${DOCKERFILE}"
  #     target: telegram_service
  #   image: "${REPO}/${DOCKER_IMAGE_PREFIX}-telegram-service:${DOCKER_TAG}"

  # onlyoffice-urlshortener:
  #   build:
  #     context: ./
  #     dockerfile: "${DOCKERFILE}"
  #     target: urlshortener
  #   image: "${REPO}/${DOCKER_IMAGE_PREFIX}-urlshortener:${DOCKER_TAG}"

  onlyoffice-api:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: api
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-api:${DOCKER_TAG}"

  # onlyoffice-api-system:
  #  build:
  #    context: ./
  #    dockerfile: "${DOCKERFILE}"
  #    target: api_system
  #  image: "${REPO}/${DOCKER_IMAGE_PREFIX}-api-system:${DOCKER_TAG}"

  onlyoffice-studio:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: studio
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-studio:${DOCKER_TAG}"

  onlyoffice-ssoauth:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: ssoauth
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-ssoauth:${DOCKER_TAG}"

  # onlyoffice-webhooks-service:
  #   build:
  #     context: ./
  #     dockerfile: "${DOCKERFILE}"
  #     target: webhooks-service
  #   image: "${REPO}/${DOCKER_IMAGE_PREFIX}-webhooks-service:${DOCKER_TAG}"

  onlyoffice-proxy:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: proxy
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-proxy:${DOCKER_TAG}"

  onlyoffice-migration-runner:
    build:
      context: ./
      dockerfile: "${DOCKERFILE}"
      target: onlyoffice-migration-runner
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-migration-runner:${DOCKER_TAG}"
