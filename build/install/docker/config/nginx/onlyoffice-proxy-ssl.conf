proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header Host $the_host;
proxy_set_header X-Forwarded-Host $the_host;
proxy_set_header X-Forwarded-Proto $the_scheme;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

## HTTP host
server {
	listen 0.0.0.0:80;
	listen [::]:80 default_server;
	server_name _;

 	## Redirects all traffic to the HTTPS host
	root /nowhere; ## root doesn't have to be a valid path since we are redirecting
	rewrite ^ https://$host$request_uri? permanent;
}

server {
	listen 127.0.0.1:80;
	listen [::1]:80;
	server_name localhost;

	client_max_body_size 4G;

	location / {
		proxy_pass http://$router_host:8092;
	}
}

## HTTPS host
server {
	listen 0.0.0.0:443 ssl;
	listen [::]:443 ssl default_server;
	root /usr/share/nginx/html;

	client_max_body_size 4G;

	## Strong SSL Security
	## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
	ssl_certificate /usr/local/share/ca-certificates/tls.crt;
	ssl_certificate_key /etc/ssl/private/tls.key;
	# Uncomment string below and specify the path to the file with the password if you use encrypted certificate key
	# ssl_password_file $ssl_password_path;
	ssl_verify_client off;

	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

	ssl_protocols TLSv1.2;
	ssl_session_cache  builtin:1000  shared:SSL:10m;

	ssl_prefer_server_ciphers   on;

	add_header Strict-Transport-Security max-age=31536000;
	# add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;

	## [Optional] If your certficate has OCSP, enable OCSP stapling to reduce the overhead and latency of running SSL.
	## Replace with your ssl_trusted_certificate. For more info see:
	## - https://medium.com/devops-programming/4445f4862461
	## - https://www.ruby-forum.com/topic/4419319
	## - https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx
	# ssl_stapling on;
	# ssl_stapling_verify on;
	# ssl_trusted_certificate /etc/nginx/ssl/stapling.trusted.crt;
	# resolver 208.67.222.222 208.67.222.220 valid=300s; # Can change to your DNS resolver if desired
	# resolver_timeout 10s;

	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	location / {
		proxy_pass http://$router_host:8092;
	}

	include includes/letsencrypt.conf;
}
