version: "3.8"
x-healthcheck:
  &x-healthcheck
  test: curl --fail http://127.0.0.1 || exit 1
  interval: 60s
  retries: 5
  start_period: 20s
  timeout: 10s

x-service: 
    &x-service-base
    container_name: base
    restart: always
    expose:
    - ${SERVICE_PORT}
    environment:
      MYSQL_CONTAINER_NAME: ${MYSQL_CONTAINER_NAME}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      DATABASE_MIGRATION: ${DATABASE_MIGRATION}
      APP_DOTNET_ENV: ${APP_DOTNET_ENV}
      APP_KNOWN_NETWORKS: ${APP_KNOWN_NETWORKS}
      APP_KNOWN_PROXIES: ${APP_KNOWN_PROXIES}
      APP_CORE_BASE_DOMAIN: ${APP_CORE_BASE_DOMAIN}
      APP_CORE_MACHINEKEY: ${APP_CORE_MACHINEKEY}
      APP_URL_PORTAL: ${APP_URL_PORTAL}
      INSTALLATION_TYPE: ${INSTALLATION_TYPE}
      OAUTH_REDIRECT_URL: ${OAUTH_REDIRECT_URL}
      DOCUMENT_SERVER_JWT_SECRET: ${DOCUMENT_SERVER_JWT_SECRET}
      DOCUMENT_SERVER_JWT_HEADER: ${DOCUMENT_SERVER_JWT_HEADER}
      DOCUMENT_SERVER_URL_PUBLIC: ${DOCUMENT_SERVER_URL_PUBLIC}
      DOCUMENT_CONTAINER_NAME: ${DOCUMENT_CONTAINER_NAME}
      DOCUMENT_SERVER_URL_EXTERNAL: ${DOCUMENT_SERVER_URL_EXTERNAL}
      KAFKA_HOST: ${KAFKA_HOST}
      ELK_CONTAINER_NAME: ${ELK_CONTAINER_NAME}
      ELK_SHEME: ${ELK_SHEME}
      ELK_HOST: ${ELK_HOST}
      ELK_PORT: ${ELK_PORT}
      REDIS_CONTAINER_NAME: ${REDIS_CONTAINER_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USER_NAME: ${REDIS_USER_NAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBIT_CONTAINER_NAME: ${RABBIT_CONTAINER_NAME}
      RABBIT_HOST: ${RABBIT_HOST}
      RABBIT_PORT: ${RABBIT_PORT}
      RABBIT_VIRTUAL_HOST: ${RABBIT_VIRTUAL_HOST}
      RABBIT_USER_NAME: ${RABBIT_USER_NAME}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      ROUTER_HOST: ${ROUTER_HOST}
      LOG_LEVEL: ${LOG_LEVEL}
      DEBUG_INFO: ${DEBUG_INFO}
    volumes:
    #- /app/onlyoffice/CommunityServer/data:/app/onlyoffice/data
    - app_data:/app/onlyoffice/data
    - files_data:/var/www/products/ASC.Files/server/
    - people_data:/var/www/products/ASC.People/server/

services:
  onlyoffice-notify:
    <<: *x-service-base
    image: "${REPO}/${DOCKER_IMAGE_PREFIX}-notify:${DOCKER_TAG}"
    container_name: ${NOTIFY_HOST}
    healthcheck:
     <<: *x-healthcheck
     test: curl --fail http://${SERVICE_NOTIFY}/health/ || exit 1

networks:
  default:
    name: ${NETWORK_NAME}
    external: true

volumes:
  app_data:
  files_data:
  people_data:
  crm_data:
  project_data:
  calendar_data:
  mail_data:
