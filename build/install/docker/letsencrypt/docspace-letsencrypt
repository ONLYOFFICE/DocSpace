#!/bin/bash

PRODUCT="docspace"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
LETSENCRYPT="/etc/letsencrypt/live";
DOCKERCOMPOSE=$(dirname "$DIR")
SERVICES="-f ${DOCKERCOMPOSE}/notify.yml -f ${DOCKERCOMPOSE}/healthchecks.yml -f ${DOCKERCOMPOSE}/docspace.yml"
NGINX="/etc/nginx/conf.d"

if [ "$#" -ge "2" ]; then
  # Install certbot if not already installed
  if ! type "certbot" &> /dev/null; then
    if type "apt-get" &> /dev/null; then
      apt-get -y update -qq
      apt-get -y -q install certbot
    elif type "yum" &> /dev/null; then
      yum -y install certbot
    fi
  fi

  MAIL=$1
  DOMAIN=$2

  if [ -f "${DOCKERCOMPOSE}/proxy.yml" ]; then
    docker-compose -f ${DOCKERCOMPOSE}/proxy.yml down
  fi

  # Request and generate Let's Encrypt SSL certificate
  echo certbot certonly --expand --webroot --noninteractive --agree-tos --email ${MAIL} -d ${DOMAIN} > /var/log/le-start.log
  certbot certonly --expand --webroot --noninteractive --agree-tos --email ${MAIL} -d ${DOMAIN} > /var/log/le-new.log
  [[ ! -f "/etc/ssl/certs/dhparam.pem" ]] && openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096

  LETSENCRYPT_DIR="${LETSENCRYPT}/${DOMAIN}"

  if [ -f "${LETSENCRYPT_DIR}/fullchain.pem" -a -f ${LETSENCRYPT_DIR}/privkey.pem ]; then
    if [ -f ${DOCKERCOMPOSE}/.env -a -f ${DOCKERCOMPOSE}/proxy-ssl.yml ]; then
      # Update .env file with Let's Encrypt domain
      sed -i "s~\(LETS_ENCRYPT_DOMAIN=\).*~\1\"${DOMAIN}\"~g" ${DOCKERCOMPOSE}/.env
      sed -i "s~\(APP_URL_PORTAL=\).*~\1\"https://${DOMAIN}\"~g" ${DOCKERCOMPOSE}/.env

      docker-compose ${SERVICES} down
      docker-compose ${SERVICES} -f ${DOCKERCOMPOSE}/proxy-ssl.yml up -d

      # Create and set permissions for docspace-renew-letsencrypt
      echo '#!/bin/bash' > ${DIR}/${PRODUCT}-renew-letsencrypt
      echo "docker-compose -f ${DOCKERCOMPOSE}/proxy-ssl.yml down" >> ${DIR}/${PRODUCT}-renew-letsencrypt
      echo "certbot renew >> /var/log/le-renew.log" >> ${DIR}/${PRODUCT}-renew-letsencrypt
      echo "docker-compose -f ${DOCKERCOMPOSE}/proxy-ssl.yml up -d" >> ${DIR}/${PRODUCT}-renew-letsencrypt
    elif [ -f "${NGINX}/onlyoffice-proxy-ssl.conf.template" ]; then
      PROXY_CONF="${NGINX}/onlyoffice-proxy.conf"
      cp -f ${NGINX}/onlyoffice-proxy-ssl.conf.template ${PROXY_CONF}

      ENVIRONMENT=$(grep -oP 'ENVIRONMENT=\K.*' /usr/lib/systemd/system/${PRODUCT}-api.service)
      sed -i "s~\(ssl_certificate \).*;~\1${LETSENCRYPT_DIR}/fullchain.pem;~g" ${PROXY_CONF}
      sed -i "s~\(ssl_certificate_key \).*;~\1${LETSENCRYPT_DIR}/privkey.pem;~g" ${PROXY_CONF}
      sed -i "s/\(\"portal\":\).*/\1 \"https:\/\/${DOMAIN}\"/" /etc/onlyoffice/docspace/appsettings.$ENVIRONMENT.json

      [ $(pgrep -x ""systemd"" | wc -l) -gt 0 ] && systemctl reload nginx || service nginx reload

      # Create and set permissions for ${PRODUCT}-renew-letsencrypt
      echo '#!/bin/bash' > ${DIR}/${PRODUCT}-renew-letsencrypt
      echo "certbot renew >> /var/log/le-renew.log" >> ${DIR}/${PRODUCT}-renew-letsencrypt
      if [ $(pgrep -x ""systemd"" | wc -l) -gt 0 ]; then
        echo 'systemctl reload nginx' >> ${DIR}/${PRODUCT}-renew-letsencrypt
      else 
        echo 'service nginx reload' >> ${DIR}/${PRODUCT}-renew-letsencrypt
      fi
    fi
    
    if [ -f ${DIR}/${PRODUCT}-renew-letsencrypt ]; then
      chmod a+x ${DIR}/${PRODUCT}-renew-letsencrypt
      # Add cron job if /etc/cron.d directory exists
      if [ -d /etc/cron.d ]; then
        echo -e "@weekly root ${DIR}/${PRODUCT}-renew-letsencrypt" | tee /etc/cron.d/${PRODUCT}-letsencrypt
      fi
    fi
  fi
else
  echo "This script provided to automatically get Let's Encrypt SSL Certificates for DocSpace"
  echo "usage:"
  echo "  docspace-letsencrypt EMAIL DOMAIN"
  echo "      EMAIL       Email used for registration and recovery contact. Use"
  echo "                  comma to register multiple emails, ex:"
  echo "                  u1@example.com,u2@example.com."
  echo "      DOMAIN      Domain name to apply"
fi
