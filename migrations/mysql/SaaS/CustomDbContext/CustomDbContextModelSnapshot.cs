// <auto-generated />
using System;
using ASC.Core.Common.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASC.Migrations.MySql.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    partial class CustomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbIPLookup", b =>
            {
                b.Property<string>("AddrType")
                    .HasColumnType("enum('ipv4','ipv6')")
                    .HasColumnName("addr_type");

                b.Property<byte[]>("IPStart")
                    .HasColumnType("varbinary(16)")
                    .HasColumnName("ip_start");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("city");

                b.Property<string>("Continent")
                    .IsRequired()
                    .HasColumnType("char(2)")
                    .HasColumnName("continent");

                b.Property<string>("Country")
                    .IsRequired()
                    .HasColumnType("char(2)")
                    .HasColumnName("country");

                b.Property<string>("District")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("district");

                b.Property<int?>("GeonameId")
                    .HasColumnType("int(10)")
                    .HasColumnName("geoname_id");

                b.Property<byte[]>("IPEnd")
                    .IsRequired()
                    .HasColumnType("varbinary(16)")
                    .HasColumnName("ip_end");

                b.Property<float>("Latitude")
                    .HasColumnType("float")
                    .HasColumnName("latitude");

                b.Property<float>("Longitude")
                    .HasColumnType("float")
                    .HasColumnName("longitude");

                b.Property<string>("StateProv")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("stateprov");

                b.Property<string>("StateProvCode")
                    .HasColumnType("varchar(15)")
                    .HasColumnName("stateprov_code");

                b.Property<string>("TimezoneName")
                    .IsRequired()
                    .HasColumnType("varchar(64)")
                    .HasColumnName("timezone_name");

                b.Property<float>("TimezoneOffset")
                    .HasColumnType("float")
                    .HasColumnName("timezone_offset");

                b.Property<string>("WeatherCode")
                    .IsRequired()
                    .HasColumnType("varchar(10)")
                    .HasColumnName("weather_code");

                b.Property<string>("ZipCode")
                    .HasColumnType("varchar(20)")
                    .HasColumnName("zipcode");

                b.HasKey("AddrType", "IPStart");

                b.ToTable("dbip_lookup", (string)null);

                b.HasAnnotation("MySql:CharSet", "utf8mb4");
            });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.MobileAppInstall", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_email")
                        .UseCollation("utf8_general_ci")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("AppType")
                        .HasColumnType("int")
                        .HasColumnName("app_type");

                    b.Property<DateTime?>("LastSign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_sign")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime")
                        .HasColumnName("registered_on");

                    b.HasKey("UserEmail", "AppType")
                        .HasName("PRIMARY");

                    b.ToTable("mobile_app_install", (string)null);

                    b.HasAnnotation("MySql:CharSet", "utf8");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.Regions", b =>
                {
                    b.Property<string>("Region")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("longtext");

                    b.Property<string>("Provider")
                        .HasColumnType("longtext");

                    b.HasKey("Region");

                    b.ToTable("Regions");

                    b.HasAnnotation("MySql:CharSet", "utf8");
                });
#pragma warning restore 612, 618
        }
    }
}
